{"version":3,"sources":["src/pages/icon/icons.ts","src/GlobalContext.ts","src/components/DemoBlock/index.tsx","src/pages/stepper/index.tsx","src/navigation/routes.ts","src/pages/icon/index.tsx","src/pages/layout/index.tsx","src/pages/cell/index.tsx","src/pages/loading/index.tsx","src/pages/button/index.tsx","src/pages/overlay/index.tsx","src/pages/popup/index.tsx","src/pages/toast/index.tsx","src/pages/checkbox/index.tsx","src/pages/image/index.tsx","src/pages/radio/index.tsx","src/pages/switch/index.tsx","src/pages/tag/index.tsx","src/pages/divider/index.tsx","src/pages/navbar/index.tsx","src/pages/notice-bar/index.tsx","src/pages/rate/index.tsx","src/pages/progress/index.tsx","src/pages/badge/index.tsx","src/pages/circle/index.tsx","src/pages/slider/index.tsx","src/pages/swiper/index.tsx","src/pages/actionSheet/index.tsx","src/pages/tab/index.tsx","src/pages/dialog/index.tsx","src/pages/actionBar/index.tsx","src/pages/field/index.tsx","src/pages/empty/index.tsx","src/pages/typography/index.tsx","src/pages/notify/index.tsx","src/pages/grid/index.tsx","src/pages/picker/index.tsx","src/pages/calendar/CalendarSingle.tsx","src/pages/calendar/index.tsx","src/pages/dateTimePicker/index.tsx","src/pages/collapse/index.tsx","src/pages/swipeCell/index.tsx","src/pages/popover/index.tsx","src/pages/input/index.tsx","src/pages/selector/index.tsx","src/pages/form/index.tsx","src/utils/iframeMessage.ts","src/style/vars.ts","src/navigation/navigationTheme.ts","src/pages/index.tsx","src/navigation/index.tsx","src/index.tsx","__generated__/AppEntry.js","App.tsx"],"names":["basicArray","list","list1","GlobalContext","React","createContext","timer","EnumGroup","styles","StyleSheet","create","card","marginHorizontal","marginTop","contentInset","paddingHorizontal","title","margin","paddingBottom","paddingTop","titleCard","DemoBlock","children","contentStyle","inset","rest","themeVars","useContext","View","style","Text","color","text_color_4","col","alignItems","justifyContent","paddingVertical","container","borderRadius","display","flexDirection","flexWrap","icon","marginVertical","iconItem","width","text","fontSize","height","textAlign","IconExample","containerStyle","backgroundColor","background_2","ScrollView","TabPane","Row","Col","span","name","size","map","it","TextContainer","isEven","colContent","item","paddingLeft","paddingRight","LayoutExample","gutter","justify","CellExample","memo","Group","value","label","isLink","arrowDirection","marginLeft","wrapper","LoadingDemo","type","vertical","textColor","ButtonExample","button","plain","disabled","loading","loadingType","loadingText","square","round","marginBottom","OverlayExample","useState","visible","setVisible","visible1","setVisible1","onPress","onBackdropPress","screenHeight","Dimensions","get","PopupDemo","position","setPosition","closeable","setCloseable","closeIcon","setCloseIcon","closeIconPosition","setCloseIconPosition","setRound","side","close","iconName","iconPosition","isRound","onClose","undefined","ToastDemo","Toast","success","fail","message","CheckboxExample","setValue","cellValue","setCellValue","toggle","check","index","indexOf","nextCellValue","push","splice","defaultChecked","checkbox","shape","checkedColor","iconSie","checked","Image","imgIcon","source","uri","direction","checkboxHorizontal","onChange","includes","resizeMode","imageSource","errorImageSource","ImageExample","theme","useTheme","console","log","block","gray_7","alt","marginRight","defaultValue","flex","SwitchExample","activeColor","inactiveColor","center","TagExample","show","setShow","mark","DividerExample","contentPosition","dashed","textStyle","lineStyle","borderColor","NavBarDemo","leftArrow","leftText","rightText","onPressLeft","onPressRight","NoticeBarDemo","leftIcon","scrollable","wrapable","mode","background","value1","setValue1","v","voidIcon","voidColor","allowHalf","count","readonly","format","rate","Math","min","max","progressStyle","ProgressDemo","percentage","setPercentage","strokeWidth","inactive","pivotText","BadgeExample","content","badge","child","dot","buttonGroup","circle","contet","CircleExample","setRate","layerColor","clockwise","r","startPosition","SliderExample","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","range","step","barHeight","customButton","customText","overflow","lineHeight","items","Item","Pressable","info","SwiperExample","autoplay","i","indicator","total","current","bottom","right","defaultActions","actions1","subname","actions2","ActionSheetExample","actions","setActions","cancelText","setCancelText","description","setDescription","useNativeIOS","setUseNativeIOS","onOpen","params","cancel","desc","useNative","TabExample","renderContent","Array","fill","_","idx","shrink","DialogExample","Dialog","alert","then","confirm","catch","showCancelButton","onCancel","Promise","res","setTimeout","onConfirm","ActionBarExample","Icon","Button","FieldExample","insets","useSafeAreaInsets","formatter","val","toString","replace","KeyboardAvoidingView","behavior","keyboardVerticalOffset","top","tooltip","intro","placeholder","readOnly","rightIcon","onClickLeftIcon","onClickRightIcon","clearable","error","required","errorMessage","suffix","formatTrigger","rows","autoSize","maxLength","showWordLimit","align","EmptyExample","image","imageSize","TypographyDemo","delete","underline","ellipsis","Title","level","Link","NotifyExample","Notify","duration","GridExample","columnNum","from","length","border","StepperExample","disableInput","decimalLength","inputWidth","buttonSize","beforeChange","forbidClick","clearTimeout","resolve","clear","columns","multiColumns","cascadeColumns","cardStyle","PickerDemo","showPicker","setShowPicker","pickerValue","setPickerValue","CalendarSingle","date","CalendarExample","fieldValue","setFieldValue","minDate","Date","maxDate","minHour","maxHour","filter","options","option","columnsOrder","CollapseDemo","initExpanded","accordion","SwipeCellExample","ref","useRef","leftAction","rightAction","wrapperStyle","alignContent","strong","open","disabledActions","iconActions","PopoverDemo","popover","select","onSelect","reference","hide","InputExample","clearTrigger","TextArea","minHeight","maxHeight","onOverlimit","currentCount","SelectorExample","arr","extend","multiple","FormExample","formRef","form","rules","routes","href","component","Form","group","Selector","Input","Popover","exhibit","SwipeCell","feedback","Collapse","DateTimePicker","Picker","Stepper","Grid","navigation","Calendar","Typography","base","Empty","Field","ActionBar","Tab","Cell","Layout","Loading","Overlay","Popup","Checkbox","Radio","Switch","Tag","Divider","NavBar","NoticeBar","Rate","Progress","Badge","Circle","Slider","Swiper","ActionSheet","listenerMessage","_method","callback","Platform","OS","callbackEvent","event","data","method","window","addEventListener","removeEventListener","postMessage","parent","common","black","white","gray_1","gray_2","gray_3","gray_4","gray_5","gray_6","gray_8","blue","green","padding","row_max_width","nav_width","border_radius","simulator_width","simulator_height","header_top_height","lightTheme","text_color_1","text_color_2","text_color_3","link_color","background_3","header_background","border_color","code_color","code_comment_color","code_background","blockquote_color","blockquote_background","darkTheme","DarkTheme","dark","colors","NativeDarkTheme","LightTheme","DefaultTheme","routeGroup","sortGroup","reduce","result","target","find","sort","a","b","localeCompare","getRouteGroup","header","link","linkLast","logo","fontWeight","Home","SafeAreaView","to","screen","onLinkPress","Stack","createStackNavigator","prefix","Linking","screens","StackNavigator","linkTo","useLinkTo","useEffect","Navigator","Screen","headerShown","headerLeft","props","HeaderBackButton","navigate","Navigation","colorScheme","NavigationContainer","fallback","linking","prefixes","config","isReady","setReady","useColorScheme","themeMode","setThemeMode","isDarkMode","globalState","useMemo","darkThemeVars","Provider","defaultTheme","StatusBar","barStyle","registerRootComponent"],"mappings":"8UAEaA,EAA0B,CACrC,QACA,aACA,WACA,aACA,UACA,QACA,OACA,QACA,OACA,UAGWC,EAAoB,CAC/B,WACA,OACA,OACA,QACA,UACA,OACA,SACA,OACA,gBACA,cACA,UACA,UACA,MACA,OACA,aACA,YACA,UACA,MACA,YACA,eACA,QACA,QACA,WACA,UACA,MACA,YACA,OACA,cACA,eACA,cACA,UACA,eACA,QACA,QACA,eACA,iBACA,mBACA,WACA,OACA,QACA,OACA,eACA,QACA,OACA,gBACA,WACA,QACA,UACA,SACA,UACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,OACA,MACA,WACA,MACA,cACA,gBACA,MACA,SACA,OACA,SACA,aACA,SACA,aACA,gBACA,kBACA,OACA,UACA,aACA,OACA,aACA,OACA,OACA,QACA,UACA,SACA,aACA,OACA,QACA,OACA,YACA,YACA,aACA,OACA,UACA,UACA,aACA,QAGWC,EAAqB,CAChC,aACA,SACA,SACA,UACA,YACA,SACA,WACA,SACA,kBACA,gBACA,YACA,YACA,QACA,SACA,eACA,cACA,YACA,QACA,cACA,iBACA,QACA,UACA,aACA,SACA,QACA,cACA,SACA,gBACA,iBACA,gBACA,YACA,iBACA,UACA,UACA,iBACA,mBACA,qBACA,aACA,SACA,UACA,SACA,iBACA,UACA,SACA,kBACA,aACA,UACA,YACA,WACA,YACA,aACA,UACA,cACA,WACA,UACA,aACA,YACA,UACA,aACA,SACA,QACA,aACA,QACA,gBACA,kBACA,QACA,WACA,SACA,YACA,WACA,kBACA,SACA,WACA,OACA,YACA,SACA,WACA,WACA,cACA,mBACA,UACA,aACA,UACA,YACA,cACA,SACA,UACA,aACA,SACA,gBACA,YACA,SACA,SACA,WACA,SACA,SACA,OACA,KACA,aACA,aACA,OACA,OACA,SACA,eACA,cACA,YACA,UACA,mBACA,aACA,WACA,UACA,WACA,cACA,UACA,OACA,YACA,UACA,YACA,WACA,cACA,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","file":"static/js/app.4170fcf9.chunk.js","sourcesContent":["import type { IconNames } from 'rn-vant';\n\nexport const basicArray: IconNames[] = [\n  'arrow',\n  'arrow-left',\n  'arrow-up',\n  'arrow-down',\n  'success',\n  'cross',\n  'plus',\n  'minus',\n  'fail',\n  'circle',\n];\n\nexport const list: IconNames[] = [\n  'location',\n  'like',\n  'star',\n  'phone',\n  'setting',\n  'fire',\n  'coupon',\n  'cart',\n  'shopping-cart',\n  'cart-circle',\n  'friends',\n  'comment',\n  'gem',\n  'gift',\n  'point-gift',\n  'send-gift',\n  'service',\n  'bag',\n  'todo-list',\n  'balance-list',\n  'clear',\n  'clock',\n  'question',\n  'checked',\n  'add',\n  'gold-coin',\n  'info',\n  'play-circle',\n  'pause-circle',\n  'stop-circle',\n  'warning',\n  'phone-circle',\n  'music',\n  'smile',\n  'thumb-circle',\n  'comment-circle',\n  'browsing-history',\n  'underway',\n  'more',\n  'video',\n  'shop',\n  'shop-collect',\n  'share',\n  'chat',\n  'smile-comment',\n  'vip-card',\n  'award',\n  'diamond',\n  'volume',\n  'cluster',\n  'wap-home',\n  'photo',\n  'gift-card',\n  'expand',\n  'medal',\n  'good-job',\n  'manager',\n  'label',\n  'bookmark',\n  'bill',\n  'hot',\n  'hot-sale',\n  'new',\n  'new-arrival',\n  'goods-collect',\n  'eye',\n  'delete',\n  'font',\n  'wechat',\n  'wechat-pay',\n  'alipay',\n  'photograph',\n  'youzan-shield',\n  'umbrella-circle',\n  'bell',\n  'printer',\n  'map-marked',\n  'card',\n  'add-square',\n  'live',\n  'lock',\n  'audio',\n  'graphic',\n  'column',\n  'invitation',\n  'play',\n  'pause',\n  'stop',\n  'weapp-nav',\n  'ascending',\n  'descending',\n  'bars',\n  'wap-nav',\n  'enlarge',\n  'photo-fail',\n  'sort',\n];\n\nexport const list1: IconNames[] = [\n  'location-o',\n  'like-o',\n  'star-o',\n  'phone-o',\n  'setting-o',\n  'fire-o',\n  'coupon-o',\n  'cart-o',\n  'shopping-cart-o',\n  'cart-circle-o',\n  'friends-o',\n  'comment-o',\n  'gem-o',\n  'gift-o',\n  'point-gift-o',\n  'send-gift-o',\n  'service-o',\n  'bag-o',\n  'todo-list-o',\n  'balance-list-o',\n  'close',\n  'clock-o',\n  'question-o',\n  'passed',\n  'add-o',\n  'gold-coin-o',\n  'info-o',\n  'play-circle-o',\n  'pause-circle-o',\n  'stop-circle-o',\n  'warning-o',\n  'phone-circle-o',\n  'music-o',\n  'smile-o',\n  'thumb-circle-o',\n  'comment-circle-o',\n  'browsing-history-o',\n  'underway-o',\n  'more-o',\n  'video-o',\n  'shop-o',\n  'shop-collect-o',\n  'share-o',\n  'chat-o',\n  'smile-comment-o',\n  'vip-card-o',\n  'award-o',\n  'diamond-o',\n  'volume-o',\n  'cluster-o',\n  'wap-home-o',\n  'photo-o',\n  'gift-card-o',\n  'expand-o',\n  'medal-o',\n  'good-job-o',\n  'manager-o',\n  'label-o',\n  'bookmark-o',\n  'bill-o',\n  'hot-o',\n  'hot-sale-o',\n  'new-o',\n  'new-arrival-o',\n  'goods-collect-o',\n  'eye-o',\n  'delete-o',\n  'font-o',\n  'balance-o',\n  'refund-o',\n  'birthday-cake-o',\n  'user-o',\n  'orders-o',\n  'tv-o',\n  'envelop-o',\n  'flag-o',\n  'flower-o',\n  'filter-o',\n  'bar-chart-o',\n  'chart-trending-o',\n  'brush-o',\n  'bullhorn-o',\n  'hotel-o',\n  'cashier-o',\n  'newspaper-o',\n  'warn-o',\n  'notes-o',\n  'calendar-o',\n  'bulb-o',\n  'user-circle-o',\n  'desktop-o',\n  'apps-o',\n  'home-o',\n  'back-top',\n  'search',\n  'points',\n  'edit',\n  'qr',\n  'qr-invalid',\n  'closed-eye',\n  'down',\n  'scan',\n  'revoke',\n  'free-postage',\n  'certificate',\n  'logistics',\n  'contact',\n  'cash-back-record',\n  'after-sale',\n  'exchange',\n  'upgrade',\n  'ellipsis',\n  'description',\n  'records',\n  'sign',\n  'completed',\n  'failure',\n  'ecard-pay',\n  'peer-pay',\n  'balance-pay',\n  'credit-pay',\n  'debit-pay',\n  'cash-on-deliver',\n  'other-pay',\n  'tosend',\n  'pending-payment',\n  'paid',\n  'aim',\n  'discount',\n  'idcard',\n  'replay',\n  'shrink',\n  'shield-o',\n  'guide-o',\n];\n","import React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { lightTheme } from './style/vars';\n\nexport interface GlobalState {\n  themeMode: ColorSchemeName;\n  isDarkMode: boolean;\n  themeVars: typeof lightTheme;\n}\n\nexport const GlobalContext = React.createContext<GlobalState>({} as GlobalState);\n","import React, { FC, useContext } from 'react';\nimport { View, Text, StyleSheet, ViewProps } from 'react-native';\nimport { GlobalContext } from '../../GlobalContext';\n\ninterface Props extends ViewProps {\n  title?: string;\n  card?: boolean;\n  contentStyle?: ViewProps['style'];\n  inset?: boolean;\n}\n\nconst DemoBlock: FC<Props> = ({ title, card, children, contentStyle, inset, ...rest }) => {\n  const { themeVars } = useContext(GlobalContext);\n\n  return (\n    <View {...rest}>\n      {title && (\n        <View style={styles.title}>\n          <Text style={{ color: themeVars.text_color_4 }}>{title}</Text>\n        </View>\n      )}\n      <View style={[inset && styles.contentInset, contentStyle]}>\n        {card ? (\n          <View style={[styles.card, title ? styles.titleCard : null]}>{children}</View>\n        ) : (\n          children\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    marginHorizontal: 12,\n    marginTop: 12,\n  },\n  contentInset: {\n    paddingHorizontal: 16,\n  },\n  title: {\n    margin: 0,\n    paddingBottom: 16,\n    paddingHorizontal: 16,\n    paddingTop: 32,\n  },\n  titleCard: {\n    marginTop: 0,\n  },\n});\n\nexport default DemoBlock;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Cell, Stepper, Toast } from 'rn-vant';\n\nlet timer: ReturnType<typeof setTimeout>;\n\nconst StepperExample = memo(() => {\n  return (\n    <ScrollView>\n      <Cell.Group inset style={{ paddingVertical: 15 }}>\n        <Cell title=\"基础用法\" center>\n          <Stepper min={0} defaultValue={1} />\n        </Cell>\n        <Cell title=\"设置最小值\" center>\n          <Stepper min={0} defaultValue={0} />\n        </Cell>\n        <Cell title=\"步长设置\" center>\n          <Stepper step={2} defaultValue={1} />\n        </Cell>\n        <Cell title=\"设置输入范围\" center>\n          <Stepper step={2} min={5} max={8} defaultValue={1} />\n        </Cell>\n        <Cell title=\"禁用状态\" center>\n          <Stepper value={1} disabled />\n        </Cell>\n        <Cell title=\"禁用输入框\" center>\n          <Stepper defaultValue={1} disableInput />\n        </Cell>\n        <Cell title=\"固定小数位数\" center>\n          <Stepper defaultValue={1} step={0.2} decimalLength={1} />\n        </Cell>\n        <Cell title=\"自定义大小\" center>\n          <Stepper defaultValue={1} inputWidth={40} buttonSize={32} />\n        </Cell>\n        <Cell title=\"异步变更\" center>\n          <Stepper\n            beforeChange={() => {\n              Toast.loading({ forbidClick: true });\n              clearTimeout(timer);\n\n              return new Promise(resolve => {\n                timer = setTimeout(() => {\n                  Toast.clear();\n                  resolve(true);\n                }, 500);\n              });\n            }}\n          />\n        </Cell>\n        <Cell title=\"圆角风格\" center>\n          <Stepper defaultValue={1} theme=\"round\" buttonSize={22} disableInput />\n        </Cell>\n      </Cell.Group>\n    </ScrollView>\n  );\n});\n\nexport default StepperExample;\n","import React from 'react';\n\nimport Icon from '../pages/icon';\nimport Layout from '../pages/layout';\nimport Cell from '../pages/cell';\nimport Loading from '../pages/loading';\nimport Button from '../pages/button';\nimport Overlay from '../pages/overlay';\nimport Popup from '../pages/popup';\nimport Toast from '../pages/toast';\nimport Checkbox from '../pages/checkbox';\nimport Image from '../pages/image';\nimport Radio from '../pages/radio';\nimport Switch from '../pages/switch';\nimport Tag from '../pages/tag';\nimport Divider from '../pages/divider';\nimport NavBar from '../pages/navbar';\nimport NoticeBar from '../pages/notice-bar';\nimport Rate from '../pages/rate';\nimport Progress from '../pages/progress';\nimport Badge from '../pages/badge';\nimport Circle from '../pages/circle';\nimport Slider from '../pages/slider';\nimport Swiper from '../pages/swiper';\nimport ActionSheet from '../pages/actionSheet';\nimport Tab from '../pages/tab';\nimport Dialog from '../pages/dialog';\nimport ActionBar from '../pages/actionBar';\nimport Field from '../pages/field';\nimport Empty from '../pages/empty';\nimport Typography from '../pages/typography';\nimport Notify from '../pages/notify';\nimport Grid from '../pages/grid';\nimport Stepper from '../pages/stepper';\nimport Picker from '../pages/picker';\nimport Calendar from '../pages/calendar';\nimport DateTimePicker from '../pages/dateTimePicker';\nimport Collapse from '../pages/collapse';\nimport SwipeCell from '../pages/swipeCell';\nimport Popover from '../pages/popover';\nimport Input from '../pages/input';\nimport Selector from '../pages/selector';\nimport Form from '../pages/form';\n\nexport type RouteItem = {\n  name: string;\n  href: string;\n  component: React.FC;\n  group: EnumGroup;\n};\n\n// eslint-disable-next-line no-shadow\nenum EnumGroup {\n  base = '基础组件',\n  form = '表单组件',\n  feedback = '反馈组件',\n  exhibit = '展示组件',\n  navigation = '导航组件',\n}\n\nexport const routes: RouteItem[] = [\n  {\n    name: 'Form 表单',\n    href: '/form',\n    component: Form,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Selector 选择组',\n    href: '/selector',\n    component: Selector,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Input 输入框',\n    href: '/input',\n    component: Input,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Popover 气泡弹出框',\n    href: '/popover',\n    component: Popover,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'SwipeCell 滑动单元格',\n    href: '/swipe-cell',\n    component: SwipeCell,\n    group: EnumGroup.feedback,\n  },\n  {\n    name: 'Collapse 折叠面板',\n    href: '/collapse',\n    component: Collapse,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'DatetimePicker 时间选择',\n    href: '/datetime-picker',\n    component: DateTimePicker,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Picker 选择器',\n    href: '/picker',\n    component: Picker,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Stepper 步进器',\n    href: '/stepper',\n    component: Stepper,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Grid 宫格',\n    href: '/grid',\n    component: Grid,\n    group: EnumGroup.navigation,\n  },\n  {\n    name: 'Calendar 日历',\n    href: '/calendar',\n    component: Calendar,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Notify 消息提示',\n    href: '/notify',\n    component: Notify,\n    group: EnumGroup.feedback,\n  },\n  {\n    name: 'Typography 文本',\n    href: '/typography',\n    component: Typography,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Empty 空状态',\n    href: '/empty',\n    component: Empty,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Field 输入框',\n    href: '/field',\n    component: Field,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'ActionBar 动作栏',\n    href: '/action-bar',\n    component: ActionBar,\n    group: EnumGroup.navigation,\n  },\n  {\n    name: 'Dialog 弹出框',\n    href: '/dialog',\n    component: Dialog,\n    group: EnumGroup.feedback,\n  },\n  {\n    name: 'Tabs 标签页',\n    href: '/tabs',\n    component: Tab,\n    group: EnumGroup.navigation,\n  },\n  {\n    name: 'Cell 单元格',\n    href: '/cell',\n    component: Cell,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Layout 布局',\n    href: '/layout',\n    component: Layout,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Icon 图标',\n    href: '/icon',\n    component: Icon,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Loading 加载',\n    href: '/loading',\n    component: Loading,\n    group: EnumGroup.feedback,\n  },\n  {\n    name: 'Button 按钮',\n    href: '/button',\n    component: Button,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Overlay 遮罩层',\n    href: '/overlay',\n    component: Overlay,\n    group: EnumGroup.feedback,\n  },\n  {\n    name: 'Popup 弹出层',\n    href: '/popup',\n    component: Popup,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Toast 轻提示',\n    href: '/toast',\n    component: Toast,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Checkbox 复选框',\n    href: '/checkbox',\n    component: Checkbox,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Image 图片',\n    href: '/image',\n    component: Image,\n    group: EnumGroup.base,\n  },\n  {\n    name: 'Radio 单选框',\n    href: '/radio',\n    component: Radio,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Switch 开关',\n    href: '/switch',\n    component: Switch,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Tag 标签',\n    href: '/tag',\n    component: Tag,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Divider 分割线',\n    href: '/divider',\n    component: Divider,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'NavBar 导航栏',\n    href: '/nav-bar',\n    component: NavBar,\n    group: EnumGroup.navigation,\n  },\n  {\n    name: 'NoticeBar 通知栏',\n    href: '/notice-bar',\n    component: NoticeBar,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Rate 评分',\n    href: '/rate',\n    component: Rate,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Progress 进度条',\n    href: '/progress',\n    component: Progress,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Badge 徽标',\n    href: '/badge',\n    component: Badge,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Circle  环形进度条',\n    href: '/circle',\n    component: Circle,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'Slider 滑块',\n    href: '/slider',\n    component: Slider,\n    group: EnumGroup.form,\n  },\n  {\n    name: 'Swiper 轮播',\n    href: '/swiper',\n    component: Swiper,\n    group: EnumGroup.exhibit,\n  },\n  {\n    name: 'ActionSheet 动作面板',\n    href: '/action-sheet',\n    component: ActionSheet,\n    group: EnumGroup.feedback,\n  },\n];\n\ntype RouteGroup = { name: EnumGroup; list: RouteItem[] };\n\nexport const getRouteGroup = (): RouteGroup[] => {\n  const sortGroup = [\n    EnumGroup.base,\n    EnumGroup.form,\n    EnumGroup.feedback,\n    EnumGroup.exhibit,\n    EnumGroup.navigation,\n  ];\n\n  return routes\n    .reduce((result: RouteGroup[], item: RouteItem) => {\n      const target = result.find(it => it.name === item.group);\n      if (target) {\n        target.list.push(item);\n      } else {\n        result.push({\n          name: item.group,\n          list: [item],\n        });\n      }\n      return result;\n    }, [])\n    .map(item => ({\n      ...item,\n      list: item.list.sort((a, b) => a.name.localeCompare(b.name)),\n    }))\n    .sort((a, b) => sortGroup.indexOf(a.name) - sortGroup.indexOf(b.name));\n};\n","import React, { FC, useContext } from 'react';\nimport { Icon, Tabs, Layout } from 'rn-vant';\nimport { View, ScrollView, Text, StyleSheet, ViewStyle, StyleProp } from 'react-native';\nimport { basicArray, list, list1 } from './icons';\nimport { DemoBlock } from '../../components';\nimport { GlobalContext } from '../../GlobalContext';\n\nconst IconExample: FC = () => {\n  const { themeVars } = useContext(GlobalContext);\n\n  const containerStyle: StyleProp<ViewStyle> = [\n    styles.container,\n    { backgroundColor: themeVars.background_2 },\n  ];\n\n  return (\n    <ScrollView>\n      <Tabs>\n        <Tabs.TabPane title=\"用法示例\">\n          <View style={containerStyle}>\n            <DemoBlock title=\"基础用法\" style={{ width: '100%' }}>\n              <Layout.Row>\n                <Layout.Col span={6} style={styles.col}>\n                  <Icon name=\"chat-o\" size={32} />\n                </Layout.Col>\n              </Layout.Row>\n            </DemoBlock>\n            <DemoBlock title=\"图标颜色\" style={{ width: '100%' }}>\n              <Layout.Row>\n                <Layout.Col span={6} style={styles.col}>\n                  <Icon name=\"cart-o\" color=\"#1989fa\" size={32} />\n                </Layout.Col>\n                <Layout.Col span={6} style={styles.col}>\n                  <Icon name=\"fire-o\" color=\"#ee0a24\" size={32} />\n                </Layout.Col>\n              </Layout.Row>\n            </DemoBlock>\n            <DemoBlock title=\"图标大小\" style={{ width: '100%' }}>\n              <Layout.Row>\n                <Layout.Col span={6} style={styles.col}>\n                  <Icon name=\"chat-o\" size={40} />\n                </Layout.Col>\n                <Layout.Col span={6} style={styles.col}>\n                  <Icon name=\"chat-o\" size={48} />\n                </Layout.Col>\n              </Layout.Row>\n            </DemoBlock>\n          </View>\n        </Tabs.TabPane>\n        <Tabs.TabPane title=\"基础图标\">\n          <View style={containerStyle}>\n            {basicArray.map(it => (\n              <View style={styles.iconItem} key={it}>\n                <Icon name={it} size={32} style={styles.icon} />\n                <Text style={styles.text}>{it}</Text>\n              </View>\n            ))}\n          </View>\n        </Tabs.TabPane>\n        <Tabs.TabPane title=\"线框风格\">\n          <View style={containerStyle}>\n            {list1.map(it => (\n              <View style={styles.iconItem} key={it}>\n                <Icon name={it} size={32} style={styles.icon} />\n                <Text style={styles.text}>{it}</Text>\n              </View>\n            ))}\n          </View>\n        </Tabs.TabPane>\n        <Tabs.TabPane title=\"实底风格\">\n          <View style={containerStyle}>\n            {list.map(it => (\n              <View style={styles.iconItem} key={it}>\n                <Icon name={it} size={32} style={styles.icon} />\n                <Text style={styles.text}>{it}</Text>\n              </View>\n            ))}\n          </View>\n        </Tabs.TabPane>\n      </Tabs>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  col: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 16,\n  },\n  container: {\n    borderRadius: 12,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 20,\n  },\n  icon: {\n    marginVertical: 16,\n  },\n  iconItem: {\n    alignItems: 'center',\n    width: '25%',\n  },\n  text: {\n    fontSize: 12,\n    height: 36,\n    paddingHorizontal: 5,\n    textAlign: 'center',\n  },\n});\n\nexport default IconExample;\n","import React, { FC } from 'react';\nimport { View, StyleSheet, Text, ScrollView } from 'react-native';\nimport { Layout } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\ntype Props = { isEven?: boolean };\n\nconst TextContainer: FC<Props> = ({ children, isEven }) => (\n  <View style={[styles.colContent, { backgroundColor: isEven ? '#66c6f2' : '#39a9ed' }]}>\n    <Text>{children}</Text>\n  </View>\n);\n\nconst LayoutExample: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Layout.Row style={styles.item}>\n          <Layout.Col span={8}>\n            <TextContainer>span: 8</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={8}>\n            <TextContainer isEven>span: 8</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={8}>\n            <TextContainer>span: 8</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n      </DemoBlock>\n      <DemoBlock title=\"在列元素之间增加间距\">\n        <Layout.Row gutter={20} style={styles.item}>\n          <Layout.Col span={8}>\n            <TextContainer>span: 8</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={8}>\n            <TextContainer isEven>span: 8</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={8}>\n            <TextContainer>span: 8</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n      </DemoBlock>\n      <DemoBlock title=\"对齐方式\">\n        <Layout.Row justify=\"center\" style={styles.item}>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer isEven>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n\n        <Layout.Row justify=\"end\" style={styles.item}>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer isEven>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n\n        <Layout.Row justify=\"space-between\" style={styles.item}>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer isEven>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n\n        <Layout.Row justify=\"space-around\" style={styles.item}>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer isEven>span: 6</TextContainer>\n          </Layout.Col>\n          <Layout.Col span={6}>\n            <TextContainer>span: 6</TextContainer>\n          </Layout.Col>\n        </Layout.Row>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  colContent: {\n    alignItems: 'center',\n    display: 'flex',\n    height: 30,\n    justifyContent: 'center',\n    width: '100%',\n  },\n  item: {\n    marginTop: 10,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n});\n\nexport default LayoutExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst CellExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group>\n          <Cell title=\"单元格\" value=\"内容\" />\n          <Cell title=\"单元格\" value=\"内容\" label=\"描述信息\" />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"卡片风格\">\n        <Cell.Group inset>\n          <Cell title=\"单元格\" value=\"内容\" />\n          <Cell title=\"单元格\" value=\"内容\" label=\"描述信息\" />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"单元格大小\">\n        <Cell.Group>\n          <Cell title=\"单元格\" value=\"内容\" size=\"large\" />\n          <Cell title=\"单元格\" value=\"内容\" label=\"描述信息\" size=\"large\" />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"展示图标\">\n        <Cell title=\"单元格\" value=\"内容\" size=\"large\" icon=\"bookmark\" />\n      </DemoBlock>\n      <DemoBlock title=\"只设置 value\">\n        <Cell value=\"内容\" />\n      </DemoBlock>\n      <DemoBlock title=\"展示箭头\">\n        <Cell title=\"单元格\" isLink />\n        <Cell title=\"单元格\" isLink value=\"内容\" />\n        <Cell title=\"单元格\" isLink arrowDirection=\"down\" value=\"内容\" />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default CellExample;\n","import React, { FC } from 'react';\nimport { Loading } from 'rn-vant';\nimport { View, StyleSheet } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst LoadingDemo: FC = () => {\n  return (\n    <View>\n      <DemoBlock title=\"加载类型\">\n        <View style={styles.wrapper}>\n          <Loading style={styles.item} />\n          <Loading type=\"spinner\" style={styles.item} />\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\">\n        <View style={styles.wrapper}>\n          <Loading color=\"#1989fa\" style={styles.item} />\n          <Loading type=\"spinner\" color=\"#1989fa\" style={styles.item} />\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"自定义大小\">\n        <View style={styles.wrapper}>\n          <Loading size={24} style={styles.item} />\n          <Loading type=\"spinner\" size={24} style={styles.item} />\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"加载文案\">\n        <View style={styles.wrapper}>\n          <Loading size={24} style={styles.item}>\n            加载中...\n          </Loading>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"垂直排列\">\n        <View style={styles.wrapper}>\n          <Loading size={24} style={styles.item} vertical>\n            加载中...\n          </Loading>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"自定义文案颜色\">\n        <View style={styles.wrapper}>\n          <Loading size={24} style={styles.item} vertical color=\"#0094ff\">\n            加载中...\n          </Loading>\n          <Loading size={24} style={styles.item} vertical textColor=\"#0094ff\">\n            加载中...\n          </Loading>\n        </View>\n      </DemoBlock>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    marginLeft: 20,\n    marginVertical: 5,\n  },\n  wrapper: {\n    flexDirection: 'row',\n  },\n});\n\nexport default LoadingDemo;\n","import React, { memo } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Button } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst ButtonExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"按钮类型\" contentStyle={styles.card}>\n        <Button type=\"primary\" style={styles.button}>\n          主要按钮\n        </Button>\n        <Button type=\"success\" style={styles.button}>\n          成功按钮\n        </Button>\n        <Button type=\"default\" style={styles.button}>\n          默认按钮\n        </Button>\n        <Button type=\"warning\" style={styles.button}>\n          警告按钮\n        </Button>\n        <Button type=\"danger\" style={styles.button}>\n          危险按钮\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"朴素按钮\" contentStyle={styles.card}>\n        <Button plain type=\"primary\" style={styles.button}>\n          朴素按钮\n        </Button>\n        <Button plain type=\"success\" style={styles.button}>\n          朴素按钮\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" contentStyle={styles.card}>\n        <Button disabled type=\"primary\" style={styles.button}>\n          禁用状态\n        </Button>\n        <Button disabled type=\"success\" style={styles.button}>\n          禁用状态\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"加载状态\" contentStyle={styles.card}>\n        <Button loading type=\"primary\" style={styles.button} />\n        <Button loading type=\"primary\" loadingType=\"spinner\" style={styles.button} />\n        <Button loading type=\"success\" loadingText=\"加载中...\" style={styles.button} />\n      </DemoBlock>\n      <DemoBlock title=\"按钮形状\" contentStyle={styles.card}>\n        <Button square type=\"primary\" style={styles.button}>\n          方形按钮\n        </Button>\n        <Button round type=\"success\" style={styles.button}>\n          圆形按钮\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"图标按钮\" contentStyle={styles.card}>\n        <Button icon=\"plus\" type=\"primary\" style={styles.button} />\n        <Button icon=\"plus\" type=\"primary\" style={styles.button}>\n          按钮\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"按钮尺寸\" contentStyle={styles.card}>\n        <Button type=\"primary\" size=\"large\" style={styles.button}>\n          大号按钮\n        </Button>\n        <Button type=\"primary\" size=\"normal\" style={styles.button}>\n          普通按钮\n        </Button>\n        <Button type=\"primary\" size=\"small\" style={styles.button}>\n          小型按钮\n        </Button>\n        <Button type=\"primary\" size=\"mini\" style={styles.button}>\n          迷你按钮\n        </Button>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" contentStyle={styles.card}>\n        <Button color=\"#7232dd\" style={styles.button}>\n          单色按钮\n        </Button>\n        <Button color=\"#7232dd\" plain style={styles.button}>\n          单色按钮\n        </Button>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  button: {\n    marginBottom: 16,\n    marginLeft: 16,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n\nexport default ButtonExample;\n","import React, { memo, useState } from 'react';\nimport { Button, Overlay } from 'rn-vant';\nimport { View } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst OverlayExample = memo(() => {\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n\n  return (\n    <View>\n      <DemoBlock title=\"基础用法\" contentStyle={{ flexDirection: 'row', marginLeft: 16 }}>\n        <Button type=\"primary\" onPress={() => setVisible1(true)}>\n          显示遮罩层\n        </Button>\n        <Overlay visible={visible1} onBackdropPress={() => setVisible1(false)} />\n      </DemoBlock>\n      <DemoBlock title=\"嵌入内容\" contentStyle={{ flexDirection: 'row', marginLeft: 16 }}>\n        <Button type=\"primary\" onPress={() => setVisible(true)}>\n          嵌入内容\n        </Button>\n        <Overlay visible={visible} onBackdropPress={() => setVisible(false)}>\n          <View style={{ width: 120, height: 120, backgroundColor: '#fff', borderRadius: 4 }} />\n        </Overlay>\n      </DemoBlock>\n    </View>\n  );\n});\n\nexport default OverlayExample;\n","import React, { FC, useState } from 'react';\nimport { Cell, Popup, IconNames } from 'rn-vant';\nimport type { IconPosition } from 'rn-vant/lib/typescript/Popup/type';\nimport { View, ScrollView, Dimensions } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst screenHeight: number = Dimensions.get('screen').height;\n\ntype Position = 'top' | 'bottom' | 'left' | 'right' | 'center';\ntype Params = {\n  side?: Position;\n  close?: boolean;\n  iconName?: IconNames;\n  iconPosition?: IconPosition;\n  isRound?: boolean;\n};\n\nconst PopupDemo: FC = () => {\n  const [visible, setVisible] = useState(false);\n  const [position, setPosition] = useState<Position>();\n  const [closeable, setCloseable] = useState<boolean>(false);\n  const [closeIcon, setCloseIcon] = useState<IconNames>();\n  const [closeIconPosition, setCloseIconPosition] = useState<IconPosition>();\n  const [round, setRound] = useState<boolean>(false);\n\n  const onPress = ({\n    side = 'bottom',\n    close = false,\n    iconName,\n    iconPosition,\n    isRound = false,\n  }: Params) => {\n    setPosition(side);\n    setCloseable(close);\n    setCloseIcon(iconName);\n    setCloseIconPosition(iconPosition);\n    setRound(isRound);\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n    setCloseable(false);\n    setCloseIcon(undefined);\n    setCloseIconPosition(undefined);\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group inset>\n          <Cell title=\"展示弹出层\" isLink onPress={() => onPress({ side: 'center' })} />\n        </Cell.Group>\n      </DemoBlock>\n\n      <DemoBlock title=\"弹出位置\">\n        <Cell.Group inset>\n          <Cell title=\"顶部弹出\" isLink onPress={() => onPress({ side: 'top' })} />\n          <Cell title=\"底部弹出\" isLink onPress={() => onPress({ side: 'bottom' })} />\n          <Cell title=\"左侧弹出\" isLink onPress={() => onPress({ side: 'left' })} />\n          <Cell title=\"右侧弹出\" isLink onPress={() => onPress({ side: 'right' })} />\n        </Cell.Group>\n      </DemoBlock>\n\n      <DemoBlock title=\"关闭图标\">\n        <Cell.Group inset>\n          <Cell title=\"关闭图标\" isLink onPress={() => onPress({ close: true })} />\n          <Cell\n            title=\"自定义图标\"\n            isLink\n            onPress={() => onPress({ close: true, iconName: 'close' })}\n          />\n          <Cell\n            title=\"图标位置\"\n            isLink\n            onPress={() => onPress({ close: true, iconPosition: 'top-left' })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n\n      <DemoBlock title=\"圆角弹窗\">\n        <Cell.Group inset>\n          <Cell title=\"圆角弹窗\" isLink onPress={() => onPress({ isRound: true })} />\n        </Cell.Group>\n      </DemoBlock>\n\n      <Popup\n        visible={visible}\n        position={position}\n        closeable={closeable}\n        onClose={onClose}\n        closeIcon={closeIcon}\n        closeIconPosition={closeIconPosition}\n        round={round}\n      >\n        <View style={{ height: 0.3 * screenHeight, width: 0.3 * screenHeight }} />\n      </Popup>\n    </ScrollView>\n  );\n};\n\nexport default PopupDemo;\n","import React, { FC } from 'react';\nimport { Cell, Toast } from 'rn-vant';\nimport { ScrollView } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst ToastDemo: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group inset>\n          <Cell title=\"文字提示\" isLink onPress={() => Toast('提示内容')} />\n          <Cell title=\"加载提示\" isLink onPress={() => Toast.loading('加载中...')} />\n          <Cell title=\"成功提示\" isLink onPress={() => Toast.success('成功文案')} />\n          <Cell title=\"失败提示\" isLink onPress={() => Toast.fail('失败文案')} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义图标\">\n        <Cell.Group inset>\n          <Cell\n            title=\"自定义图标\"\n            isLink\n            onPress={() =>\n              Toast({\n                message: '自定义图标',\n                icon: 'like-o',\n              })\n            }\n          />\n          <Cell\n            title=\"自定义加载图标\"\n            isLink\n            onPress={() =>\n              Toast.loading({\n                message: '加载中...',\n                loadingType: 'spinner',\n              })\n            }\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义位置\">\n        <Cell.Group inset>\n          <Cell\n            title=\"顶部展示\"\n            isLink\n            onPress={() =>\n              Toast({\n                message: '提示内容',\n                position: 'top',\n              })\n            }\n          />\n          <Cell\n            title=\"底部展示\"\n            isLink\n            onPress={() =>\n              Toast({\n                message: '提示内容',\n                position: 'bottom',\n              })\n            }\n          />\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default ToastDemo;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, Image, StyleSheet, View } from 'react-native';\nimport { Checkbox, Button, Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst activeIcon = 'https://img.yzcdn.cn/vant/user-active.png';\nconst inactiveIcon = 'https://img.yzcdn.cn/vant/user-inactive.png';\n\nconst CheckboxExample = memo(() => {\n  const [value, setValue] = useState<any[]>([]);\n  const [cellValue, setCellValue] = useState<string[]>([]);\n\n  const toggle = (check: string) => {\n    const index = cellValue.indexOf(check);\n    const nextCellValue = [...cellValue];\n    if (index === -1) {\n      nextCellValue.push(check);\n    } else {\n      nextCellValue.splice(index, 1);\n    }\n    setCellValue(nextCellValue);\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Checkbox defaultChecked>复选框</Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" inset>\n        <Checkbox disabled>复选框</Checkbox>\n        <Checkbox defaultChecked disabled style={styles.checkbox}>\n          复选框\n        </Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"自定义形状\" inset>\n        <Checkbox defaultChecked shape=\"square\">\n          复选框\n        </Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" inset>\n        <Checkbox checkedColor=\"#ee0a24\">复选框</Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"自定义大小\" inset>\n        <Checkbox iconSie={24} defaultChecked>\n          复选框\n        </Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"自定义图标\" inset>\n        <Checkbox\n          icon={({ checked }) => (\n            <Image style={styles.imgIcon} source={{ uri: checked ? activeIcon : inactiveIcon }} />\n          )}\n        >\n          复选框\n        </Checkbox>\n      </DemoBlock>\n      <DemoBlock title=\"复选框组\" inset>\n        <Checkbox.Group>\n          <Checkbox value=\"a\">复选框 a</Checkbox>\n          <Checkbox value=\"b\" style={styles.checkbox}>\n            复选框 b\n          </Checkbox>\n        </Checkbox.Group>\n      </DemoBlock>\n      <DemoBlock title=\"水平排列\" inset>\n        <Checkbox.Group direction=\"horizontal\">\n          <Checkbox value=\"a\">复选框 a</Checkbox>\n          <Checkbox value=\"b\" style={styles.checkboxHorizontal}>\n            复选框 b\n          </Checkbox>\n        </Checkbox.Group>\n      </DemoBlock>\n      <DemoBlock title=\"全选与反选\" inset>\n        <Checkbox.Group value={value} onChange={setValue}>\n          <Checkbox value=\"a\">复选框 a</Checkbox>\n          <Checkbox value=\"b\" style={styles.checkbox}>\n            复选框 b\n          </Checkbox>\n          <Checkbox value=\"c\" style={styles.checkbox}>\n            复选框 c\n          </Checkbox>\n        </Checkbox.Group>\n        <View style={{ flexDirection: 'row', marginTop: 16 }}>\n          <Button type=\"primary\" onPress={() => setValue(['a', 'b', 'c'])}>\n            全选\n          </Button>\n          <Button type=\"primary\" style={{ marginLeft: 16 }} onPress={() => setValue([])}>\n            反选\n          </Button>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"搭配单元格组件使用\" inset>\n        <Cell.Group>\n          <Cell\n            title=\"复选框a\"\n            value={<Checkbox checked={cellValue.includes('a')} />}\n            onPress={() => toggle('a')}\n          />\n          <Cell\n            title=\"复选框b\"\n            value={<Checkbox checked={cellValue.includes('b')} />}\n            onPress={() => toggle('b')}\n          />\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    marginTop: 8,\n  },\n  checkboxHorizontal: {\n    marginLeft: 20,\n  },\n  imgIcon: {\n    height: 20,\n    width: 25,\n  },\n});\n\nexport default CheckboxExample;\n","import React, { memo } from 'react';\nimport { ScrollView, StyleSheet, View, Text, ImageResizeMode } from 'react-native';\nimport { Image, useTheme, Loading } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst resizeMode: ImageResizeMode[] = ['center', 'contain', 'cover', 'repeat', 'stretch'];\n\nconst imageSource = { uri: 'https://img.yzcdn.cn/vant/cat.jpeg' };\nconst errorImageSource = { uri: 'https://img.yzcdn.cn/vant/cat1.jpeg' };\n\nconst ImageExample = memo(() => {\n  const theme = useTheme();\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Image\n          source={imageSource}\n          onPress={() => {\n            console.log('??');\n          }}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"填充模式\" inset>\n        <View style={styles.container}>\n          {resizeMode.map(it => (\n            <View style={styles.block} key={it}>\n              <Image source={imageSource} resizeMode={it} />\n              <Text style={[styles.text, { color: theme.gray_7 }]}>{it}</Text>\n            </View>\n          ))}\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"圆形图片\" inset>\n        <View style={styles.container}>\n          {resizeMode.map(it => (\n            <View style={styles.block} key={it}>\n              <Image source={imageSource} resizeMode={it} round />\n              <Text style={[styles.text, { color: theme.gray_7 }]}>{it}</Text>\n            </View>\n          ))}\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"加载中提示\" inset>\n        <View style={styles.container}>\n          <View style={styles.block}>\n            <Image source={imageSource} />\n            <Text style={[styles.text, { color: theme.gray_7 }]}>默认提示</Text>\n          </View>\n          <View style={styles.block}>\n            <Image source={imageSource} loading={<Loading size={20} type=\"spinner\" />} />\n            <Text style={[styles.text, { color: theme.gray_7 }]}>自定义提示</Text>\n          </View>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"加载失败提示\" inset>\n        <View style={styles.container}>\n          <View style={styles.block}>\n            <Image source={errorImageSource} />\n            <Text style={[styles.text, { color: theme.gray_7 }]}>默认提示</Text>\n          </View>\n          <View style={styles.block}>\n            <Image source={errorImageSource} alt=\"加载失败\" />\n            <Text style={[styles.text, { color: theme.gray_7 }]}>自定义提示</Text>\n          </View>\n        </View>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  block: {\n    alignItems: 'center',\n    marginBottom: 10,\n    marginRight: 10,\n  },\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  text: {\n    marginTop: 5,\n  },\n});\n\nexport default ImageExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, Image, StyleSheet } from 'react-native';\nimport { Radio, Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst activeIcon = 'https://img.yzcdn.cn/vant/user-active.png';\nconst inactiveIcon = 'https://img.yzcdn.cn/vant/user-inactive.png';\n\nconst CheckboxExample = memo(() => {\n  const [cellValue, setCellValue] = useState<string>('a');\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Radio.Group defaultValue={1}>\n          <Radio value={1}>单选框 1</Radio>\n          <Radio value={2} style={styles.checkbox}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" inset>\n        <Radio.Group defaultValue={1} disabled>\n          <Radio value={1}>单选框 1</Radio>\n          <Radio value={2} style={styles.checkbox}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义形状\" inset>\n        <Radio.Group defaultValue={1}>\n          <Radio value={1} shape=\"square\">\n            单选框 1\n          </Radio>\n          <Radio value={2} shape=\"square\" style={styles.checkbox}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" inset>\n        <Radio.Group defaultValue={1}>\n          <Radio value={1} checkedColor=\"#ee0a24\">\n            单选框 1\n          </Radio>\n          <Radio value={2} checkedColor=\"#ee0a24\" style={styles.checkbox}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义大小\" inset>\n        <Radio.Group defaultValue={1}>\n          <Radio value={1} iconSie={24}>\n            单选框 1\n          </Radio>\n          <Radio value={2} iconSie={24} style={styles.checkbox}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义图标\" inset>\n        <Radio.Group defaultValue={1}>\n          <Radio\n            value={1}\n            icon={({ checked }) => (\n              <Image style={styles.imgIcon} source={{ uri: checked ? activeIcon : inactiveIcon }} />\n            )}\n          >\n            单选框 1\n          </Radio>\n          <Radio\n            value={2}\n            icon={({ checked }) => (\n              <Image style={styles.imgIcon} source={{ uri: checked ? activeIcon : inactiveIcon }} />\n            )}\n            style={styles.checkbox}\n          >\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <DemoBlock title=\"水平排列\" inset>\n        <Radio.Group defaultValue={1} direction=\"horizontal\">\n          <Radio value={1}>单选框 1</Radio>\n          <Radio value={2} style={styles.checkboxHorizontal}>\n            单选框 2\n          </Radio>\n        </Radio.Group>\n      </DemoBlock>\n      <Radio.Group value={cellValue}>\n        <DemoBlock title=\"搭配单元格组件使用\" inset style={{ flex: 1 }}>\n          <Cell.Group>\n            <Cell title=\"单选框 a\" value={<Radio value=\"a\" />} onPress={() => setCellValue('a')} />\n            <Cell title=\"单选框 b\" value={<Radio value=\"b\" />} onPress={() => setCellValue('b')} />\n          </Cell.Group>\n        </DemoBlock>\n      </Radio.Group>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    marginTop: 8,\n  },\n  checkboxHorizontal: {\n    marginLeft: 20,\n  },\n  imgIcon: {\n    height: 20,\n    width: 25,\n  },\n});\n\nexport default CheckboxExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Switch, Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst SwitchExample = memo(() => {\n  const [value] = useState(false);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Switch defaultChecked onChange={checked => console.log(`switch to ${checked}`)} />\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" inset>\n        <Switch disabled defaultChecked />\n      </DemoBlock>\n      <DemoBlock title=\"加载状态\" inset>\n        <Switch loading defaultChecked />\n      </DemoBlock>\n      <DemoBlock title=\"自定义大小\" inset>\n        <Switch size={24} defaultChecked />\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" inset>\n        <Switch activeColor=\"#ee0a24\" inactiveColor=\"#dcdee0\" defaultChecked />\n      </DemoBlock>\n      <DemoBlock title=\"异步控制\" inset>\n        <Switch checked={value} />\n      </DemoBlock>\n      <DemoBlock title=\"搭配单元格使用\" inset>\n        <Cell title=\"标题\" value={<Switch defaultChecked />} center />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default SwitchExample;\n","/* eslint-disable prettier/prettier */\nimport React, { memo, useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Tag, Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst TagExample = memo(() => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Cell.Group>\n          <Cell center title=\"primary 类型\" value={<Tag type=\"primary\">标签</Tag>} />\n          <Cell center title=\"success 类型\" value={<Tag type=\"success\">标签</Tag>} />\n          <Cell center title=\"danger 类型\" value={<Tag type=\"danger\">标签</Tag>} />\n          <Cell center title=\"warning 类型\" value={<Tag type=\"warning\">标签</Tag>} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"样式风格\" inset>\n        <Cell.Group>\n          <Cell center title=\"空心样式\" value={<Tag plain type=\"primary\">标签</Tag>} />\n          <Cell center title=\"圆角样式\" value={<Tag round type=\"primary\">标签</Tag>} />\n          <Cell center title=\"标记样式\" value={<Tag mark type=\"primary\">标签</Tag>} />\n          <Cell center title=\"可关闭标签\" value={<Tag closeable show={show} onClose={() => setShow(false)} type=\"primary\">标签</Tag>} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"标签大小\" inset>\n        <Cell.Group>\n          <Cell center title=\"小号标签\" value={<Tag type=\"primary\">标签</Tag>} />\n          <Cell center title=\"中号标签\" value={<Tag size=\"medium\" type=\"primary\">标签</Tag>} />\n          <Cell center title=\"大号标签\" value={<Tag size=\"large\" type=\"primary\">标签</Tag>} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" inset>\n        <Cell.Group>\n          <Cell center title=\"背景颜色\" value={<Tag color=\"#7232dd\">标签</Tag>} />\n          <Cell center title=\"文字颜色\" value={<Tag color=\"#ffe1e1\" textColor=\"#ad0000\">标签</Tag>} />\n          <Cell center title=\"空心颜色\" value={<Tag color=\"#7232dd\" plain>标签</Tag>} />\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default TagExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Divider } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst DividerExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Divider />\n      </DemoBlock>\n      <DemoBlock title=\"展示文字\">\n        <Divider>文字</Divider>\n      </DemoBlock>\n      <DemoBlock title=\"内容位置\">\n        <Divider contentPosition=\"left\">文字</Divider>\n        <Divider contentPosition=\"right\">文字</Divider>\n      </DemoBlock>\n      <DemoBlock title=\"虚线\">\n        <Divider dashed>文字</Divider>\n      </DemoBlock>\n      <DemoBlock title=\"自定义样式\">\n        <Divider\n          style={{ paddingHorizontal: 16 }}\n          textStyle={{ color: '#1989fa' }}\n          lineStyle={{ borderColor: '#1989fa' }}\n        >\n          文字\n        </Divider>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default DividerExample;\n","import React, { FC } from 'react';\nimport { NavBar, Toast, Icon } from 'rn-vant';\nimport { ScrollView } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst NavBarDemo: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <NavBar\n          title=\"标题\"\n          leftArrow\n          leftText=\"返回\"\n          rightText=\"按钮\"\n          onPressLeft={() => Toast.message('返回')}\n          onPressRight={() => Toast.message('按钮')}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"自定义内容\">\n        <NavBar\n          title=\"标题\"\n          leftArrow\n          leftText=\"返回\"\n          onPressLeft={() => Toast.message('返回')}\n          rightText={<Icon name=\"search\" size={20} />}\n          onPressRight={() => Toast.message('按钮')}\n        />\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default NavBarDemo;\n","import React, { FC } from 'react';\nimport { NoticeBar } from 'rn-vant';\nimport { ScrollView, View } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst NoticeBarDemo: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <NoticeBar\n          leftIcon=\"volume-o\"\n          text=\"在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\"\n        />\n      </DemoBlock>\n      <DemoBlock title=\"滚动播放\">\n        <NoticeBar scrollable text=\"在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\" />\n      </DemoBlock>\n      <DemoBlock title=\"多行展示\">\n        <NoticeBar wrapable text=\"在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。\" />\n      </DemoBlock>\n      <DemoBlock title=\"通知栏状态\">\n        <NoticeBar mode=\"closeable\">技术是开发它的人的共同灵魂。</NoticeBar>\n        <View style={{ marginTop: 4 }}>\n          <NoticeBar mode=\"link\">技术是开发它的人的共同灵魂。</NoticeBar>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"自定义样式\">\n        <NoticeBar\n          leftIcon=\"info-o\"\n          background=\"rgb(236, 249, 255)\"\n          color=\"rgb(25, 137, 250)\"\n          text=\"技术是开发它的人的共同灵魂。\"\n        />\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default NoticeBarDemo;\n","import React, { memo, useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Rate } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst CheckboxExample = memo(() => {\n  const [value, setValue] = useState(3);\n  const [value1, setValue1] = useState(3.5);\n  const onChange = (v: number) => setValue(v);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Rate value={value} onChange={onChange} />\n      </DemoBlock>\n      <DemoBlock title=\"自定义图标\" inset>\n        <Rate icon=\"fire\" voidIcon=\"fire-o\" value={value} onChange={onChange} />\n      </DemoBlock>\n      <DemoBlock title=\"自定义样式\" inset>\n        <Rate\n          icon=\"fire\"\n          voidIcon=\"fire-o\"\n          color=\"#ffd21e\"\n          voidColor=\"#000\"\n          value={value}\n          onChange={onChange}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"半星样式\" inset>\n        <Rate allowHalf value={value1} onChange={setValue1} />\n      </DemoBlock>\n      <DemoBlock title=\"自定义数量\" inset>\n        <Rate allowHalf value={value} count={8} onChange={onChange} />\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" inset>\n        <Rate allowHalf value={value} disabled onChange={onChange} />\n      </DemoBlock>\n      <DemoBlock title=\"只读状态显示小数\" inset>\n        <Rate allowHalf defaultValue={3.6} readonly onChange={onChange} />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default CheckboxExample;\n","import React, { FC, useState } from 'react';\nimport { Progress, Button } from 'rn-vant';\nimport { View, ScrollView, Text } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst format = (rate: number) => Math.min(Math.max(rate, 0), 100);\n\nconst progressStyle = { marginVertical: 16 };\n\nconst ProgressDemo: FC = () => {\n  const [percentage, setPercentage] = useState(50);\n\n  const add = () => {\n    setPercentage(value => format(value + 20));\n  };\n\n  const reduce = () => {\n    setPercentage(value => format(value - 20));\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Progress percentage=\"50\" style={progressStyle} />\n      </DemoBlock>\n      <DemoBlock title=\"线条粗细\" inset>\n        <Progress strokeWidth={8} percentage=\"50\" style={progressStyle} />\n      </DemoBlock>\n      <DemoBlock title=\"置灰\" inset>\n        <Progress inactive percentage=\"50\" style={progressStyle} />\n      </DemoBlock>\n      <DemoBlock title=\"样式定制\" inset>\n        <Progress color=\"#f2826a\" percentage=\"25\" pivotText=\"橙色\" style={progressStyle} />\n        <Progress color=\"#ee0a24\" percentage=\"50\" pivotText=\"红色\" style={progressStyle} />\n        <Progress\n          color=\"#7232dd\"\n          percentage=\"75\"\n          pivotText={<Text>紫色</Text>}\n          style={progressStyle}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"过渡效果\" inset>\n        <Progress percentage={percentage} style={progressStyle} />\n        <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n          <Button style={{ marginRight: 10 }} type=\"primary\" size=\"small\" onPress={add}>\n            增加\n          </Button>\n          <Button type=\"danger\" size=\"small\" onPress={reduce}>\n            减少\n          </Button>\n        </View>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default ProgressDemo;\n","import React, { memo } from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { Badge, Icon } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst BadgeExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" contentStyle={styles.content} inset>\n        <Badge content={5} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content={10} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content=\"hot\" style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge dot>\n          <View style={styles.child} />\n        </Badge>\n      </DemoBlock>\n      <DemoBlock title=\"最大值\" contentStyle={styles.content} inset>\n        <Badge content={20} max={9} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content=\"99\" max=\"20\" style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content=\"9999\" max=\"99\">\n          <View style={styles.child} />\n        </Badge>\n      </DemoBlock>\n      <DemoBlock title=\"自定义颜色\" contentStyle={styles.content} inset>\n        <Badge content={5} color=\"#1989fa\" style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content={10} color=\"#1989fa\" style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge color=\"#1989fa\" dot>\n          <View style={styles.child} />\n        </Badge>\n      </DemoBlock>\n      <DemoBlock title=\"自定义徽标内容\" contentStyle={styles.content} inset>\n        <Badge content={<Icon name=\"success\" size={12} color=\"#fff\" />} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content={<Icon name=\"cross\" size={12} color=\"#fff\" />} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n        <Badge content={<Icon name=\"down\" size={12} color=\"#fff\" />} style={styles.badge}>\n          <View style={styles.child} />\n        </Badge>\n      </DemoBlock>\n      <DemoBlock title=\"独立展示\" contentStyle={styles.content} inset>\n        <Badge content=\"20\" style={{ marginRight: 16 }} />\n        <Badge content=\"200\" max=\"99\" />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  badge: {\n    marginRight: 16,\n  },\n  child: {\n    backgroundColor: '#f2f3f5',\n    borderRadius: 4,\n    height: 40,\n    width: 40,\n  },\n  content: {\n    flexDirection: 'row',\n  },\n});\n\nexport default BadgeExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Circle, Button } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst format = (rate: number) => Math.min(Math.max(rate, 0), 100);\n\nconst styles = StyleSheet.create({\n  buttonGroup: { flexDirection: 'row', justifyContent: 'center', marginTop: 15 },\n  circle: {\n    marginLeft: 16,\n    marginTop: 16,\n  },\n  contet: { flexDirection: 'row', flexWrap: 'wrap' },\n});\n\nconst CircleExample = memo(() => {\n  const [rate, setRate] = useState(70);\n\n  const add = () => {\n    setRate(r => format(r + 20));\n  };\n\n  const reduce = () => {\n    setRate(r => format(r - 20));\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" contentStyle={styles.contet}>\n        <Circle rate={rate} text={`${rate}%`} style={styles.circle} />\n      </DemoBlock>\n      <DemoBlock title=\"样式定制\">\n        <View style={styles.contet}>\n          <Circle strokeWidth={60} rate={rate} text=\"宽度定制\" style={styles.circle} />\n          <Circle\n            color=\"#ee0a24\"\n            layerColor=\"#ebedf0\"\n            rate={rate}\n            text=\"颜色定制\"\n            style={styles.circle}\n          />\n          <Circle\n            color={{\n              '0%': '#3fecff',\n              '100%': '#6149f6',\n            }}\n            rate={rate}\n            text=\"渐变色\"\n            style={styles.circle}\n          />\n          <Circle\n            color=\"#07c160\"\n            clockwise={false}\n            rate={rate}\n            text=\"逆时针\"\n            style={styles.circle}\n          />\n          <Circle\n            color=\"#7232dd\"\n            clockwise={false}\n            size={120}\n            rate={rate}\n            text=\"大小定制\"\n            style={styles.circle}\n          />\n        </View>\n\n        <View style={styles.buttonGroup}>\n          <Button onPress={add} type=\"primary\">\n            增加\n          </Button>\n          <Button onPress={reduce} type=\"danger\">\n            减少\n          </Button>\n        </View>\n      </DemoBlock>\n      <DemoBlock title=\"起始位置\" contentStyle={styles.contet}>\n        <Circle startPosition=\"left\" rate={70} text=\"左侧\" style={styles.circle} />\n        <Circle startPosition=\"right\" rate={70} text=\"右侧\" style={styles.circle} />\n        <Circle startPosition=\"bottom\" rate={70} text=\"底部\" style={styles.circle} />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default CircleExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, View, StyleSheet, Text } from 'react-native';\nimport { Slider } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst SliderExample = memo(() => {\n  const [value1, setValue1] = useState(10);\n  const [value2, setValue2] = useState<[number, number]>([10, 50]);\n  const [value3, setValue3] = useState(10);\n  const [value4, setValue4] = useState(10);\n  const [value5, setValue5] = useState(10);\n  const [value6, setValue6] = useState(10);\n  // const [value7, setValue7] = useState(50);\n  // const [value8, setValue8] = useState<[number, number]>([20, 50]);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Slider value={value1} onChange={setValue1} />\n      </DemoBlock>\n      <DemoBlock title=\"双滑块\" inset>\n        <Slider range value={value2} onChange={setValue2} />\n      </DemoBlock>\n      <DemoBlock title=\"指定选择范围\" inset>\n        <Slider value={value3} onChange={setValue3} min={-50} max={50} />\n      </DemoBlock>\n      <DemoBlock title=\"禁用\" inset>\n        <Slider value={10} disabled />\n      </DemoBlock>\n      <DemoBlock title=\"指定步长\" inset>\n        <Slider value={value4} onChange={setValue4} step={10} />\n      </DemoBlock>\n      <DemoBlock title=\"自定义样式\" inset>\n        <Slider value={value5} onChange={setValue5} barHeight={4} activeColor=\"#ee0a24\" />\n      </DemoBlock>\n      <DemoBlock title=\"自定义按钮\" inset>\n        <Slider\n          value={value6}\n          onChange={setValue6}\n          activeColor=\"#ee0a24\"\n          button={\n            <View style={styles.customButton}>\n              <Text style={styles.customText}>{value6}</Text>\n            </View>\n          }\n        />\n      </DemoBlock>\n      {/* <DemoBlock title=\"垂直方向\" inset contentStyle={styles.vertical}>\n        <View style={{ width: 50, height: 150, marginRight: 100 }}>\n          <Slider style={{ flex: 1 }} vertical value={value7} onChange={setValue7} />\n        </View>\n        <View style={{ width: 50, height: 150, marginRight: 100 }}>\n          <Slider style={{ flex: 1 }} range vertical value={value8} onChange={setValue8} />\n        </View>\n      </DemoBlock> */}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  customButton: {\n    backgroundColor: '#ee0a24',\n    borderRadius: 100,\n    overflow: 'hidden',\n  },\n  customText: {\n    color: '#fff',\n    fontSize: 10,\n    lineHeight: 18,\n    textAlign: 'center',\n    width: 26,\n  },\n  vertical: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n  },\n});\n\nexport default SliderExample;\n","import React, { memo } from 'react';\nimport { ScrollView, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { Swiper, Toast } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst images = [\n  'https://img.yzcdn.cn/vant/apple-1.jpg',\n  'https://img.yzcdn.cn/vant/apple-2.jpg',\n  'https://img.yzcdn.cn/vant/apple-3.jpg',\n  'https://img.yzcdn.cn/vant/apple-4.jpg',\n  'https://img.yzcdn.cn/vant/apple-5.jpg',\n  'https://img.yzcdn.cn/vant/apple-6.jpg',\n  'https://img.yzcdn.cn/vant/apple-7.jpg',\n  'https://img.yzcdn.cn/vant/apple-8.jpg',\n];\nconst colors = ['#ace0ff', '#bcffbd', '#e4fabd', '#ffcfac'];\n\nconst items = colors.map((color, index) => (\n  <Swiper.Item key={color}>\n    <Pressable\n      onPress={() => {\n        Toast.info(`你点击了卡片 ${index + 1}`);\n      }}\n      style={{\n        backgroundColor: index % 2 === 0 ? '#3f45ff' : '#686dff',\n        alignItems: 'center',\n        height: 150,\n        justifyContent: 'center',\n      }}\n    >\n      <Text style={{ color: '#fff' }}>{index + 1}</Text>\n    </Pressable>\n  </Swiper.Item>\n));\n\nconst SwiperExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" contentStyle={styles.contentStyle}>\n        <Swiper autoplay={5000}>{items}</Swiper>\n      </DemoBlock>\n      <DemoBlock title=\"监听onChange事件\" contentStyle={styles.contentStyle}>\n        <Swiper onChange={i => Toast.info(`当前索引${i}`)}>{items}</Swiper>\n      </DemoBlock>\n      <DemoBlock title=\"纵向滚动\" contentStyle={styles.contentStyle}>\n        <Swiper autoplay={5000} vertical>\n          {items}\n        </Swiper>\n      </DemoBlock>\n      <DemoBlock title=\"自定义指示器\" contentStyle={styles.contentStyle}>\n        <Swiper\n          indicator={(total, current) => (\n            <View style={styles.indicator}>\n              <Text style={{ color: '#fff' }}>\n                {current + 1}/{total}\n              </Text>\n            </View>\n          )}\n        >\n          {items}\n        </Swiper>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  contentStyle: {\n    height: 150,\n  },\n  indicator: {\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    borderRadius: 2,\n    bottom: 10,\n    fontSize: 12,\n    paddingHorizontal: 5,\n    paddingVertical: 2,\n    position: 'absolute',\n    right: 15,\n  },\n});\n\nexport default SwiperExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, View, Text } from 'react-native';\nimport { Cell, ActionSheet, ActionSheetAction } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst defaultActions: ActionSheetAction[] = [\n  { name: '选项一' },\n  { name: '选项二' },\n  { name: '选项三' },\n];\nconst actions1: ActionSheetAction[] = [\n  { name: '选项一' },\n  { name: '选项二' },\n  { name: '选项三', subname: '描述信息' },\n];\nconst actions2: ActionSheetAction[] = [\n  { name: '着色选项', color: '#ee0a24' },\n  { name: '禁用选项', disabled: true },\n  { name: '加载选项', loading: true },\n];\n\ntype OpenParams = {\n  list?: ActionSheetAction[];\n  cancel?: string;\n  desc?: string;\n  useNative?: boolean;\n};\n\nconst ActionSheetExample = memo(() => {\n  const [actions, setActions] = useState(defaultActions);\n  const [visible, setVisible] = useState(false);\n  const [visible1, setVisible1] = useState(false);\n  const [cancelText, setCancelText] = useState('');\n  const [description, setDescription] = useState('');\n  const [useNativeIOS, setUseNativeIOS] = useState(false);\n\n  const onOpen = (params?: OpenParams) => {\n    setCancelText(params?.cancel ?? '');\n    setDescription(params?.desc ?? '');\n    setActions(params?.list ?? defaultActions);\n    setUseNativeIOS(params?.useNative ?? false);\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setCancelText('');\n    setDescription('');\n    setActions(defaultActions);\n    setUseNativeIOS(false);\n    setVisible(false);\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group inset>\n          <Cell title=\"基础用法\" isLink onPress={onOpen} />\n          <Cell title=\"展示取消按钮\" isLink onPress={() => onOpen({ cancel: '取消' })} />\n          <Cell\n            title=\"展示描述信息\"\n            isLink\n            onPress={() => onOpen({ desc: '这是一段描述信息', cancel: '取消', list: actions1 })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"选项状态\">\n        <Cell.Group inset>\n          <Cell\n            title=\"选项状态\"\n            isLink\n            onPress={() => onOpen({ cancel: '取消', list: actions2 })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义面板\">\n        <Cell.Group inset>\n          <Cell title=\"自定义面板\" isLink onPress={() => setVisible1(true)} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"IOS 原生动作面板\">\n        <Cell.Group inset>\n          <Cell\n            title=\"IOS 原生动作面板\"\n            isLink\n            onPress={() => onOpen({ useNative: true, cancel: '取消', desc: '这是一段描述信息' })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n\n      <ActionSheet\n        visible={visible}\n        actions={actions}\n        onClose={onClose}\n        cancelText={cancelText}\n        description={description}\n        useNativeIOS={useNativeIOS}\n      />\n\n      <ActionSheet visible={visible1} onClose={() => setVisible1(false)} title=\"标题\" closeable>\n        <View>\n          <Text style={{ paddingHorizontal: 16, paddingTop: 16, paddingBottom: 160 }}>内容</Text>\n        </View>\n      </ActionSheet>\n    </ScrollView>\n  );\n});\n\nexport default ActionSheetExample;\n","import React, { memo, useContext } from 'react';\nimport { ScrollView, Text, ViewStyle, View } from 'react-native';\nimport { Tabs } from 'rn-vant';\nimport { GlobalContext } from '../../GlobalContext';\nimport { DemoBlock } from '../../components';\n\nconst TabExample = memo(() => {\n  const { themeVars } = useContext(GlobalContext);\n  const containerStyle: ViewStyle = {\n    paddingVertical: 24,\n    paddingHorizontal: 20,\n    backgroundColor: themeVars.background_2,\n  };\n\n  const renderContent = (count = 3) =>\n    Array(count)\n      .fill(null)\n      .map((_, idx) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Tabs.TabPane key={idx} title={`标签${idx + 1}`}>\n          <View style={containerStyle}>\n            <Text>内容 {idx + 1}</Text>\n          </View>\n        </Tabs.TabPane>\n      ));\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Tabs>{renderContent()}</Tabs>\n      </DemoBlock>\n      <DemoBlock title=\"标签栏滚动\">\n        <Tabs>{renderContent(8)}</Tabs>\n      </DemoBlock>\n      <DemoBlock title=\"标签栏滚动\">\n        <Tabs>\n          <Tabs.TabPane title=\"标签1\">\n            <View style={containerStyle}>\n              <Text>内容 1</Text>\n            </View>\n          </Tabs.TabPane>\n          <Tabs.TabPane title=\"标签2\" disabled>\n            <View style={containerStyle}>\n              <Text>内容 2</Text>\n            </View>\n          </Tabs.TabPane>\n          <Tabs.TabPane title=\"标签3\">\n            <View style={containerStyle}>\n              <Text>内容 3</Text>\n            </View>\n          </Tabs.TabPane>\n        </Tabs>\n      </DemoBlock>\n      <DemoBlock title=\"收缩布局\">\n        <Tabs shrink>{renderContent(4)}</Tabs>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default TabExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Dialog, Cell, Toast } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst DialogExample = memo(() => {\n  const showDialog = () => {\n    Dialog.alert({\n      title: '标题',\n      message: '代码是写出来给人看的，附带能在机器上运行。',\n    }).then(() => {\n      // on close\n    });\n  };\n\n  const showNoTitleDialog = () => {\n    Dialog.alert({\n      message: '生命远不止连轴转和忙到极限，人类的体验远比这辽阔、丰富得多。',\n    }).then(() => {\n      // on close\n    });\n  };\n\n  const showConfirm = () => {\n    Dialog.confirm({\n      title: '标题',\n      message: '如果解决方法是丑陋的，那就肯定还有更好的解决方法，只是还没有发现而已。',\n    })\n      .then(() => {\n        // on confirm\n      })\n      .catch(() => {\n        // on cancel\n      });\n  };\n\n  const showAsyncConfirm = () => {\n    Dialog.show({\n      title: '标题',\n      message: '弹窗内容',\n      showCancelButton: true,\n      onCancel: () => {\n        return new Promise(res => {\n          setTimeout(() => {\n            res(true);\n            Toast.success({ message: '取消按钮异步' });\n          }, 3000);\n        });\n      },\n      onConfirm: () => {\n        return new Promise(res => {\n          setTimeout(() => {\n            res(true);\n            Toast.success({ message: '确认按钮异步' });\n          }, 3000);\n        });\n      },\n    });\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group inset>\n          <Cell title=\"提示弹窗\" isLink onPress={showDialog} />\n          <Cell title=\"提示弹窗（无标题）\" isLink onPress={showNoTitleDialog} />\n          <Cell title=\"确认弹窗\" isLink onPress={showConfirm} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"圆角按钮样式\">\n        <Cell.Group inset>\n          <Cell\n            title=\"提示弹窗\"\n            isLink\n            onPress={() => {\n              Dialog.alert({\n                title: '标题',\n                message: '代码是写出来给人看的，附带能在机器上运行。',\n                theme: 'round-button',\n              });\n            }}\n          />\n          <Cell\n            title=\"提示弹窗（无标题）\"\n            isLink\n            onPress={() => {\n              Dialog.alert({\n                message: '生命远不止连轴转和忙到极限，人类的体验远比这辽阔、丰富得多。',\n                theme: 'round-button',\n              });\n            }}\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"异步关闭\">\n        <Cell.Group inset>\n          <Cell title=\"异步关闭\" isLink onPress={showAsyncConfirm} />\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default DialogExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { ActionBar, Icon } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst ActionBarExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <ActionBar>\n          <ActionBar.Icon\n            icon={<Icon name=\"chat-o\" />}\n            text=\"客服\"\n            onPress={() => console.log('chat click')}\n          />\n          <ActionBar.Icon\n            icon={<Icon name=\"chat\" />}\n            text=\"购物车\"\n            onPress={() => console.log('cart click')}\n          />\n          <ActionBar.Icon\n            icon={<Icon name=\"shop-o\" />}\n            text=\"店铺\"\n            onPress={() => console.log('shop click')}\n          />\n          <ActionBar.Button\n            type=\"danger\"\n            text=\"立即购买\"\n            onPress={() => console.log('button click')}\n          />\n        </ActionBar>\n      </DemoBlock>\n      <DemoBlock title=\"徽标提示\">\n        <ActionBar>\n          <ActionBar.Icon icon={<Icon name=\"chat-o\" />} badge={{ dot: true }} text=\"客服\" />\n          <ActionBar.Icon icon={<Icon name=\"cart-o\" />} badge={{ content: 5 }} text=\"购物车\" />\n          <ActionBar.Icon icon={<Icon name=\"shop-o\" />} badge={{ content: 12 }} text=\"店铺\" />\n          <ActionBar.Button type=\"warning\" text=\"加入购物车\" />\n          <ActionBar.Button type=\"danger\" text=\"立即购买\" />\n        </ActionBar>\n      </DemoBlock>\n      <DemoBlock title=\"自定义图标颜色\">\n        <ActionBar>\n          <ActionBar.Icon icon={<Icon name=\"chat-o\" color=\"red\" />} text=\"客服\" />\n          <ActionBar.Icon icon={<Icon name=\"cart-o\" color=\"red\" />} text=\"购物车\" />\n          <ActionBar.Icon icon={<Icon name=\"shop-o\" color=\"red\" />} text=\"店铺\" />\n          <ActionBar.Button type=\"warning\" text=\"加入购物车\" />\n          <ActionBar.Button type=\"danger\" text=\"立即购买\" />\n        </ActionBar>\n      </DemoBlock>\n      <DemoBlock title=\"自定义按钮颜色\">\n        <ActionBar>\n          <ActionBar.Icon icon={<Icon name=\"chat-o\" />} text=\"客服\" />\n          <ActionBar.Icon icon={<Icon name=\"cart-o\" />} text=\"购物车\" />\n          <ActionBar.Button color=\"#be99ff\" type=\"warning\" text=\"加入购物车\" />\n          <ActionBar.Button color=\"#7232dd\" type=\"danger\" text=\"立即购买\" />\n        </ActionBar>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default ActionBarExample;\n","import React, { memo, useState } from 'react';\nimport { ScrollView, Text, KeyboardAvoidingView } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { Field, Cell, Toast, Button } from 'rn-vant';\nimport { SmileO, MusicO, WarningO } from '@rn-vant/icons';\nimport { DemoBlock } from '../../components';\n\nconst FieldExample = memo(() => {\n  const insets = useSafeAreaInsets();\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  const formatter = (val: string | number) => val.toString().replace(/\\d/g, '');\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={insets.top}>\n      <ScrollView style={{ marginBottom: 30 }}>\n        <DemoBlock title=\"基础用法\">\n          <Cell.Group inset>\n            <Field\n              label=\"文本\"\n              tooltip=\"提示tooltip\"\n              intro={<Text>We must make sure that your are a human.</Text>}\n              placeholder=\"请输入文本\"\n            />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"自定义类型\">\n          <Cell.Group inset>\n            <Field label=\"文本\" placeholder=\"请输入文本\" />\n            <Field label=\"手机号\" type=\"tel\" placeholder=\"请输入手机号\" />\n            <Field label=\"整数\" type=\"digit\" placeholder=\"请输入整数\" />\n            <Field label=\"数字\" type=\"number\" placeholder=\"请输入数字（支持小数）\" />\n            <Field label=\"密码\" type=\"password\" placeholder=\"请输入密码\" />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"禁用输入框\">\n          <Cell.Group inset>\n            <Field label=\"文本\" value=\"输入框只读\" readOnly />\n            <Field label=\"文本\" value=\"输入框已禁用\" disabled />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"显示图标\">\n          <Cell.Group inset>\n            <Field\n              label=\"文本\"\n              leftIcon={<SmileO />}\n              rightIcon={<WarningO />}\n              placeholder=\"显示图标\"\n              onClickLeftIcon={() => Toast.info('左侧图标点击')}\n              onClickRightIcon={() => Toast.info('右侧图标点击')}\n            />\n            <Field clearable label=\"文本\" leftIcon={<MusicO />} placeholder=\"显示清除图标\" />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"错误提示\">\n          <Cell.Group inset>\n            <Field error required label=\"用户名\" placeholder=\"请输入用户名\" />\n            <Field\n              required\n              label=\"手机号\"\n              placeholder=\"请输入手机号\"\n              errorMessage=\"手机号格式错误\"\n            />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"插入按钮\">\n          <Cell.Group inset>\n            <Field\n              center\n              clearable\n              label=\"短信验证码\"\n              placeholder=\"请输入短信验证码\"\n              suffix={\n                <Button size=\"small\" type=\"primary\">\n                  发送\n                </Button>\n              }\n            />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"格式化输入内容\">\n          <Cell.Group inset>\n            <Field\n              value={value1}\n              label=\"文本\"\n              formatter={formatter}\n              placeholder=\"在输入时执行格式化\"\n              onChange={setValue1}\n            />\n            <Field\n              value={value2}\n              label=\"文本\"\n              formatter={formatter}\n              formatTrigger=\"onBlur\"\n              placeholder=\"在失焦时执行格式化\"\n              onChange={setValue2}\n            />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"高度自适应\">\n          <Cell.Group inset>\n            <Field rows={1} autoSize label=\"留言\" type=\"textarea\" placeholder=\"请输入留言\" />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"显示字数统计\">\n          <Cell.Group inset>\n            <Field\n              rows={2}\n              autoSize\n              label=\"留言\"\n              type=\"textarea\"\n              placeholder=\"请输入留言\"\n              maxLength={50}\n              showWordLimit\n            />\n          </Cell.Group>\n        </DemoBlock>\n        <DemoBlock title=\"输入框内容对齐\">\n          <Cell.Group inset>\n            <Field label=\"文本\" placeholder=\"输入框内容右对齐\" align=\"right\" />\n          </Cell.Group>\n        </DemoBlock>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n});\n\nexport default FieldExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Empty, Tabs, Button } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst EmptyExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Empty description=\"描述文字\" />\n      </DemoBlock>\n      <DemoBlock title=\"图片类型\">\n        <Tabs>\n          <Tabs.TabPane title=\"通用错误\">\n            <Empty image=\"error\" description=\"描述文字\" />\n          </Tabs.TabPane>\n          <Tabs.TabPane title=\"网络错误\">\n            <Empty image=\"network\" description=\"描述文字\" />\n          </Tabs.TabPane>\n          <Tabs.TabPane title=\"搜索提示\">\n            <Empty image=\"search\" description=\"描述文字\" />\n          </Tabs.TabPane>\n        </Tabs>\n      </DemoBlock>\n      <DemoBlock title=\"自定义大小\">\n        <Empty imageSize={100} description=\"描述文字\" />\n      </DemoBlock>\n      <DemoBlock title=\"自定义图片\">\n        <Empty\n          image=\"https://cdn.jsdelivr.net/npm/@vant/assets/custom-empty-image.png\"\n          imageSize={80}\n          description=\"描述文字\"\n        />\n      </DemoBlock>\n      <DemoBlock title=\"底部内容\">\n        <Empty description=\"描述文字\">\n          <Button round type=\"primary\" style={{ width: 160, height: 40 }}>\n            按钮\n          </Button>\n        </Empty>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default EmptyExample;\n","import React, { FC } from 'react';\nimport { Typography } from 'rn-vant';\nimport { ScrollView } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst TypographyDemo: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Typography.Text>\n          In the process of <Typography.Text type=\"danger\">internal</Typography.Text>{' '}\n          <Typography.Text delete>desktop</Typography.Text>applications development,\n          <Typography.Text type=\"primary\"> many different</Typography.Text> design specs and{' '}\n          <Typography.Text underline>implementations</Typography.Text>would be{' '}\n          <Typography.Text type=\"warning\">involved</Typography.Text>\n        </Typography.Text>\n      </DemoBlock>\n      <DemoBlock title=\"类型\" inset>\n        <Typography.Text type=\"danger\">这是一条文本</Typography.Text>\n        <Typography.Text type=\"primary\">这是一条文本</Typography.Text>\n        <Typography.Text type=\"warning\">这是一条文本</Typography.Text>\n        <Typography.Text type=\"secondary\">这是一条文本</Typography.Text>\n      </DemoBlock>\n      <DemoBlock title=\"文本省略\" inset>\n        <Typography.Text ellipsis>\n          In the process of internal desktop applications development, many different design specs\n          and implementations would be involved\n        </Typography.Text>\n        <Typography.Text ellipsis={2}>\n          In the process of internal desktop applications development, many different design specs\n          and implementations would be involved\n        </Typography.Text>\n      </DemoBlock>\n      <DemoBlock title=\"标题\" inset>\n        <Typography.Title level={1}>一级测试标题</Typography.Title>\n        <Typography.Title level={2}>二级测试标题</Typography.Title>\n        <Typography.Title level={3}>三级测试标题</Typography.Title>\n        <Typography.Title level={4}>四级测试标题</Typography.Title>\n        <Typography.Title level={5}>五级测试标题</Typography.Title>\n      </DemoBlock>\n      <DemoBlock title=\"链接样式\" inset>\n        <Typography.Link>测试Link</Typography.Link>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default TypographyDemo;\n","import React, { memo, useState } from 'react';\nimport { Notify, Cell, Icon } from 'rn-vant';\nimport { ScrollView, Text } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst NotifyExample = memo(() => {\n  const [show, setShow] = useState(false);\n\n  const showNotify = () => {\n    setShow(true);\n    setTimeout(() => {\n      setShow(false);\n    }, 2000);\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group inset>\n          <Cell title=\"基础用法\" isLink onPress={() => Notify.show('通知内容')} />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"通知类型\">\n        <Cell.Group inset>\n          <Cell\n            title=\"主要通知\"\n            isLink\n            onPress={() => Notify.show({ type: 'primary', message: '通知内容' })}\n          />\n          <Cell\n            title=\"成功通知\"\n            isLink\n            onPress={() => Notify.show({ type: 'success', message: '通知内容' })}\n          />\n          <Cell\n            title=\"危险通知\"\n            isLink\n            onPress={() => Notify.show({ type: 'danger', message: '通知内容' })}\n          />\n          <Cell\n            title=\"警告通知\"\n            isLink\n            onPress={() => Notify.show({ type: 'warning', message: '通知内容' })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"自定义通知\">\n        <Cell.Group inset>\n          <Cell\n            title=\"自定义颜色\"\n            isLink\n            onPress={() =>\n              Notify.show({ color: '#ad0000', background: '#ffe1e1', message: '自定义颜色' })\n            }\n          />\n          <Cell\n            title=\"自定义时长\"\n            isLink\n            onPress={() => Notify.show({ message: '自定义时长', duration: 1000 })}\n          />\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"组件调用\">\n        <Cell.Group inset>\n          <Cell title=\"组件调用\" isLink onPress={showNotify}>\n            <Notify type=\"success\" visible={show}>\n              <Icon name=\"bell\" style={{ marginRight: 4 }} color=\"white\" size={14} />\n              <Text>通知内容</Text>\n            </Notify>\n          </Cell>\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default NotifyExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Grid, Image } from 'rn-vant';\nimport { PhotoO, HomeO, Search } from '@rn-vant/icons';\nimport { DemoBlock } from '../../components';\n\nconst GridExample = memo(() => {\n  return (\n    <ScrollView style={{ marginBottom: 30 }}>\n      <DemoBlock title=\"基础用法\">\n        <Grid>\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"自定义列数\">\n        <Grid columnNum={3}>\n          {Array.from({ length: 6 }, (_, i) => (\n            <Grid.Item key={i} icon={<PhotoO />} text=\"文字\" />\n          ))}\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"自定义内容\">\n        <Grid border={false} columnNum={3}>\n          <Grid.Item>\n            <Image source={{ uri: 'https://img.yzcdn.cn/vant/apple-1.jpg' }} />\n          </Grid.Item>\n          <Grid.Item>\n            <Image source={{ uri: 'https://img.yzcdn.cn/vant/apple-2.jpg' }} />\n          </Grid.Item>\n          <Grid.Item>\n            <Image source={{ uri: 'https://img.yzcdn.cn/vant/apple-3.jpg' }} />\n          </Grid.Item>\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"正方形格子\">\n        <Grid square>\n          {Array.from({ length: 8 }, (_, i) => (\n            <Grid.Item key={i} icon={<PhotoO />} text=\"文字\" />\n          ))}\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"格子间距\">\n        <Grid gutter={10}>\n          {Array.from({ length: 8 }, (_, i) => (\n            <Grid.Item key={i} icon={<PhotoO />} text=\"文字\" />\n          ))}\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"内容横排\">\n        <Grid direction=\"horizontal\" columnNum={3}>\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n          <Grid.Item icon={<PhotoO />} text=\"文字\" />\n        </Grid>\n      </DemoBlock>\n      <DemoBlock title=\"徽标提示\">\n        <Grid columnNum={2}>\n          <Grid.Item icon={<HomeO />} text=\"文字\" badge={{ dot: true }} />\n          <Grid.Item icon={<Search />} text=\"文字\" badge={{ content: '99+' }} />\n        </Grid>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default GridExample;\n","import React, { FC, useState } from 'react';\nimport { Picker, Toast, Popup, Field } from 'rn-vant';\nimport { ScrollView, ViewStyle } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst columns = [\n  { text: '杭州', value: 'Hangzhou' },\n  { text: '宁波', value: 'Ningbo' },\n  { text: '温州', value: 'Wenzhou' },\n  { text: '绍兴', value: 'Shaoxing' },\n  { text: '湖州', value: 'Huzhou' },\n];\n\nconst multiColumns = [\n  // 第一列\n  [\n    { text: '周一', value: 'Monday' },\n    { text: '周二', value: 'Tuesday' },\n    { text: '周三', value: 'Wednesday' },\n    { text: '周四', value: 'Thursday' },\n    { text: '周五', value: 'Friday' },\n  ],\n  // 第二列\n  [\n    { text: '上午', value: 'Morning' },\n    { text: '下午', value: 'Afternoon' },\n    { text: '晚上', value: 'Evening' },\n  ],\n];\n\nconst cascadeColumns = [\n  {\n    text: '浙江',\n    value: 'Zhejiang',\n    children: [\n      {\n        text: '杭州',\n        value: 'Hangzhou',\n        children: [\n          { text: '西湖区', value: 'Xihu' },\n          { text: '余杭区', value: 'Yuhang' },\n        ],\n      },\n      {\n        text: '温州',\n        value: 'Wenzhou',\n        children: [\n          { text: '鹿城区', value: 'Lucheng' },\n          { text: '瓯海区', value: 'Ouhai' },\n        ],\n      },\n    ],\n  },\n  {\n    text: '福建',\n    value: 'Fujian',\n    children: [\n      {\n        text: '福州',\n        value: 'Fuzhou',\n        children: [\n          { text: '鼓楼区', value: 'Gulou' },\n          { text: '台江区', value: 'Taijiang' },\n        ],\n      },\n      {\n        text: '厦门',\n        value: 'Xiamen',\n        children: [\n          { text: '思明区', value: 'Siming' },\n          { text: '海沧区', value: 'Haicang' },\n        ],\n      },\n    ],\n  },\n];\n\nconst cardStyle: ViewStyle = {\n  borderRadius: 8,\n  marginHorizontal: 12,\n};\n\nconst PickerDemo: FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [pickerValue, setPickerValue] = useState('');\n\n  const onChange = (value: string, _: any, index: number) => {\n    Toast(`当前值：${value}, 当前索引：${index}`);\n  };\n\n  const handleFileChange = (value: string) => {\n    setPickerValue(value);\n    setShowPicker(false);\n  };\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Picker\n          title=\"标题\"\n          columns={columns}\n          onChange={onChange}\n          onCancel={() => Toast.info('点击取消按钮')}\n          onConfirm={() => Toast.info('点击确认按钮')}\n          style={cardStyle}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"搭配弹出层使用\">\n        <Field\n          label=\"城市\"\n          placeholder=\"选择城市\"\n          isLink\n          readonly\n          onPress={() => setShowPicker(true)}\n          value={pickerValue}\n        />\n        <Popup round position=\"bottom\" visible={showPicker} onClose={() => setShowPicker(false)}>\n          <Picker\n            title=\"标题\"\n            columns={columns}\n            onCancel={() => setShowPicker(false)}\n            onConfirm={handleFileChange}\n            value={pickerValue}\n          />\n        </Popup>\n      </DemoBlock>\n      <DemoBlock title=\"多列选择\">\n        <Picker title=\"标题\" columns={multiColumns} style={cardStyle} />\n      </DemoBlock>\n      <DemoBlock title=\"级联选择\">\n        <Picker title=\"标题\" columns={cascadeColumns} style={cardStyle} />\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default PickerDemo;\n","import React, { useState } from 'react';\nimport { Cell, Calendar } from 'rn-vant';\n\nconst CalendarSingle = () => {\n  const [visible, setVisible] = useState(false);\n\n  const handleConfirm = (date: Date | Date[]) => {\n    console.log(date);\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Cell title=\"选择单个日期\" isLink onPress={() => setVisible(true)} />\n      <Calendar visible={visible} onConfirm={handleConfirm} onClose={() => setVisible(false)} />\n    </>\n  );\n};\n\nexport default CalendarSingle;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Cell } from 'rn-vant';\nimport { DemoBlock } from '../../components';\nimport CalendarSingle from './CalendarSingle';\n\nconst CalendarExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group>\n          <CalendarSingle />\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default CalendarExample;\n","import React, { FC, useState } from 'react';\nimport { DatetimePicker, Field, Popup } from 'rn-vant';\nimport { ScrollView, ViewStyle } from 'react-native';\nimport { DemoBlock } from '../../components';\n\nconst cardStyle: ViewStyle = {\n  borderRadius: 8,\n  marginHorizontal: 12,\n};\n\nconst PickerDemo: FC = () => {\n  const [fieldValue, setFieldValue] = useState('');\n  const [showPicker, setShowPicker] = useState(false);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"选择年月日\">\n        <DatetimePicker\n          title=\"选择年月日\"\n          type=\"date\"\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n          style={cardStyle}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"选择年月\">\n        <DatetimePicker\n          type=\"year-month\"\n          title=\"选择年月\"\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n          style={cardStyle}\n          formatter={(type: string, val: string) => {\n            if (type === 'year') {\n              return `${val}年`;\n            }\n            if (type === 'month') {\n              return `${val}月`;\n            }\n            return val;\n          }}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"选择月日\">\n        <DatetimePicker\n          type=\"month-day\"\n          title=\"选择月日\"\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n          style={cardStyle}\n          formatter={(type: string, val: string) => {\n            if (type === 'month') {\n              return `${val}月`;\n            }\n            if (type === 'day') {\n              return `${val}日`;\n            }\n            return val;\n          }}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"选择时间\">\n        <DatetimePicker title=\"选择时间\" type=\"time\" minHour=\"10\" maxHour=\"20\" style={cardStyle} />\n      </DemoBlock>\n      <DemoBlock title=\"选择完整时间\">\n        <DatetimePicker\n          type=\"datetime\"\n          title=\"选择完整时间\"\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n          style={cardStyle}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"选择年月日小时\">\n        <DatetimePicker\n          type=\"datehour\"\n          title=\"选择年月日小时\"\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n          style={cardStyle}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"选项过滤器\">\n        <DatetimePicker\n          title=\"选项过滤器\"\n          type=\"time\"\n          minHour=\"10\"\n          maxHour=\"20\"\n          value=\"12:00\"\n          filter={(type, options) => {\n            if (type === 'minute') {\n              return options.filter(option => +option % 5 === 0);\n            }\n            return options;\n          }}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"自定义列排序\">\n        <DatetimePicker\n          title=\"自定义列排序\"\n          type=\"date\"\n          columnsOrder={['month', 'day', 'year']}\n          minDate={new Date(2020, 0, 1)}\n          maxDate={new Date(2025, 10, 1)}\n          value={new Date()}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"搭配弹出层使用\">\n        <Field\n          readonly\n          label=\"日期\"\n          value={fieldValue}\n          placeholder=\"选择选择日期\"\n          onPress={() => setShowPicker(true)}\n        />\n        <Popup round visible={showPicker} position=\"bottom\" onClose={() => setShowPicker(false)}>\n          <DatetimePicker\n            type=\"datetime\"\n            onConfirm={(value: string) => {\n              setFieldValue(value);\n              setShowPicker(false);\n            }}\n            filter={(type: string, options) => {\n              if (type === 'minute') {\n                return options.filter(option => +option % 5 === 0);\n              }\n              return options;\n            }}\n            minDate={new Date(2021, 0, 1)}\n            maxDate={new Date(2021, 2, 1)}\n            value={fieldValue}\n          />\n        </Popup>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default PickerDemo;\n","import React, { FC } from 'react';\nimport { Collapse } from 'rn-vant';\nimport { ScrollView, Text } from 'react-native';\nimport { QuestionO } from '@rn-vant/icons';\nimport { DemoBlock } from '../../components';\n\nconst CollapseDemo: FC = () => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Collapse initExpanded={['1']}>\n          <Collapse.Item title=\"标题1\" name=\"1\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题2\" name=\"2\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题3\" name=\"3\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n        </Collapse>\n      </DemoBlock>\n      <DemoBlock title=\"手风琴\">\n        <Collapse initExpanded=\"1\" accordion>\n          <Collapse.Item icon={<QuestionO />} title={<Text>自定义标题</Text>} name=\"1\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题2\" name=\"2\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题3\" name=\"3\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n        </Collapse>\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\">\n        <Collapse>\n          <Collapse.Item title=\"标题1\" name=\"1\">\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题2\" name=\"2\" disabled>\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n          <Collapse.Item title=\"标题3\" name=\"3\" disabled>\n            代码是写出来给人看的，附带能在机器上运行\n          </Collapse.Item>\n        </Collapse>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default CollapseDemo;\n","import React, { memo, useRef } from 'react';\nimport { ScrollView, View } from 'react-native';\nimport { SwipeCell, Button, Cell, Toast, Image, Typography, SwipeCellInstance } from 'rn-vant';\nimport { Arrow, ArrowLeft, Cross } from '@rn-vant/icons';\nimport { DemoBlock } from '../../components';\n\nconst SwipeCellExample = memo(() => {\n  const ref = useRef<SwipeCellInstance>(null);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <SwipeCell\n          leftAction={\n            <Button square type=\"primary\">\n              选择\n            </Button>\n          }\n          rightAction={\n            <>\n              <Button square type=\"danger\">\n                删除\n              </Button>\n              <Button square type=\"primary\">\n                收藏\n              </Button>\n            </>\n          }\n        >\n          <Cell title=\"单元格\" value=\"内容\" />\n        </SwipeCell>\n      </DemoBlock>\n      <DemoBlock title=\"事件监听\">\n        <SwipeCell\n          onOpen={() => Toast.info('打开')}\n          onClose={() => Toast.info('关闭')}\n          rightAction={\n            <Button style={{ height: '100%' }} square type=\"danger\">\n              删除\n            </Button>\n          }\n        >\n          <Cell title=\"单元格\" value=\"内容\" />\n        </SwipeCell>\n      </DemoBlock>\n      <DemoBlock title=\"自定义内容\">\n        <SwipeCell\n          rightAction={\n            <Button style={{ height: '100%' }} square type=\"danger\">\n              删除\n            </Button>\n          }\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'stretch',\n              paddingHorizontal: 16,\n              paddingVertical: 10,\n              backgroundColor: 'white',\n            }}\n          >\n            <Image\n              wrapperStyle={{ width: 88, height: 99, marginRight: 10 }}\n              source={{ uri: 'https://img.yzcdn.cn/vant/ipad.jpeg' }}\n            />\n            <View style={{ justifyContent: 'space-between', flex: 1 }}>\n              <View>\n                <Typography.Title level={5}>商品标题</Typography.Title>\n                <Typography.Text type=\"secondary\">这里是商品描述</Typography.Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignContent: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Typography.Text strong size=\"lg\">\n                  ¥2.00\n                </Typography.Text>\n                <Typography.Text size=\"sm\" type=\"secondary\">\n                  x2\n                </Typography.Text>\n              </View>\n            </View>\n          </View>\n        </SwipeCell>\n      </DemoBlock>\n      <DemoBlock title=\"外部调用\">\n        <SwipeCell\n          ref={ref}\n          leftAction={\n            <Button square type=\"primary\">\n              选择\n            </Button>\n          }\n          rightAction={\n            <Button square type=\"danger\">\n              删除\n            </Button>\n          }\n        >\n          <Cell title=\"单元格\" value=\"内容\" />\n        </SwipeCell>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\n          <Button icon={<ArrowLeft />} onPress={() => ref.current?.open('left')}>\n            左滑打开\n          </Button>\n          <Button icon={<Arrow />} onPress={() => ref.current?.open('right')}>\n            右滑打开\n          </Button>\n          <Button icon={<Cross />} onPress={() => ref.current?.close()}>\n            关闭\n          </Button>\n        </View>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default SwipeCellExample;\n","import React, { FC, useRef } from 'react';\nimport { Button, Popover, Toast, PopoverAction, Space, Grid, PopoverInstance } from 'rn-vant';\nimport { ScrollView } from 'react-native';\nimport { AddO, MusicO, MoreO, PhotoO } from '@rn-vant/icons';\nimport { DemoBlock } from '../../components';\n\nconst actions: PopoverAction[] = [{ text: '选项一' }, { text: '选项二' }, { text: '选项三' }];\nconst disabledActions: PopoverAction[] = [\n  { text: '选项一', disabled: true },\n  { text: '选项二', disabled: true },\n  { text: '选项三' },\n];\nconst iconActions: PopoverAction[] = [\n  { text: '选项一', icon: <AddO /> },\n  { text: '选项二', icon: <MusicO /> },\n  { text: '选项三', icon: <MoreO /> },\n];\n\nconst PopoverDemo: FC = () => {\n  const popover = useRef<PopoverInstance>(null);\n  const select = (option: PopoverAction) => Toast.info(option.text);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\" inset>\n        <Space>\n          <Popover\n            actions={actions}\n            onSelect={select}\n            reference={<Button type=\"primary\">浅色风格</Button>}\n          />\n          <Popover\n            actions={actions}\n            theme=\"dark\"\n            onSelect={select}\n            reference={<Button type=\"primary\">深色风格</Button>}\n          />\n        </Space>\n      </DemoBlock>\n      <DemoBlock title=\"选项配置\" inset>\n        <Space>\n          <Popover\n            actions={iconActions}\n            onSelect={select}\n            reference={<Button type=\"primary\">展示图标</Button>}\n          />\n          <Popover\n            actions={disabledActions}\n            onSelect={select}\n            reference={<Button type=\"primary\">禁用选项</Button>}\n          />\n        </Space>\n      </DemoBlock>\n      <DemoBlock title=\"自定义内容\" inset>\n        <Space>\n          <Popover ref={popover} reference={<Button type=\"primary\">自定义内容</Button>}>\n            <Grid border={false} columnNum={3} square style={{ width: 240 }}>\n              {Array.from({ length: 6 }, (_, i) => (\n                <Grid.Item\n                  onPress={() => popover.current?.hide()}\n                  key={i}\n                  icon={<PhotoO />}\n                  text=\"文字\"\n                />\n              ))}\n            </Grid>\n          </Popover>\n        </Space>\n      </DemoBlock>\n    </ScrollView>\n  );\n};\n\nexport default PopoverDemo;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Cell, Input, Toast } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst InputExample = memo(() => {\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Cell.Group>\n          <Cell>\n            <Input placeholder=\"请输入文本\" />\n          </Cell>\n          <Cell>\n            <Input type=\"tel\" placeholder=\"请输入手机号\" />\n          </Cell>\n          <Cell>\n            <Input type=\"digit\" placeholder=\"请输入整数\" />\n          </Cell>\n          <Cell>\n            <Input type=\"number\" placeholder=\"请输入数字\" />\n          </Cell>\n          <Cell>\n            <Input type=\"password\" placeholder=\"请输入密码\" />\n          </Cell>\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"清除按钮\">\n        <Cell>\n          <Input placeholder=\"请输入文本\" clearable clearTrigger=\"always\" />\n        </Cell>\n      </DemoBlock>\n      <DemoBlock title=\"多行输入\">\n        <Cell>\n          <Input.TextArea placeholder=\"多行输入\" />\n        </Cell>\n        <Cell style={{ marginTop: 10 }}>\n          <Input.TextArea placeholder=\"自适应高度\" autoSize />\n        </Cell>\n        <Cell style={{ marginTop: 10 }}>\n          <Input.TextArea\n            placeholder=\"最小高度80，最大高度120\"\n            autoSize={{ minHeight: 80, maxHeight: 120 }}\n          />\n        </Cell>\n      </DemoBlock>\n      <DemoBlock title=\"字数统计\">\n        <Cell>\n          <Input\n            placeholder=\"最多输入10个字符\"\n            maxLength={10}\n            onOverlimit={() => Toast.info('不能超过10个字符哦🍺')}\n          />\n        </Cell>\n        <Cell style={{ marginTop: 10 }}>\n          <Input.TextArea placeholder=\"字数统计\" maxLength={50} showWordLimit />\n        </Cell>\n        <Cell style={{ marginTop: 10 }}>\n          <Input.TextArea\n            placeholder=\"自定义输出\"\n            showWordLimit={({ currentCount }) => `已经输入${currentCount}个字啦 ✍️`}\n          />\n        </Cell>\n      </DemoBlock>\n      <DemoBlock title=\"对齐方式\">\n        <Cell.Group>\n          <Cell>\n            <Input placeholder=\"内容剧中\" align=\"center\" />\n          </Cell>\n          <Cell>\n            <Input placeholder=\"内容右对齐\" align=\"right\" />\n          </Cell>\n        </Cell.Group>\n      </DemoBlock>\n      <DemoBlock title=\"输入框状态\">\n        <Cell.Group>\n          <Cell>\n            <Input value=\"只读模式\" readOnly />\n          </Cell>\n          <Cell>\n            <Input value=\"禁用模式\" disabled />\n          </Cell>\n        </Cell.Group>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default InputExample;\n","import React, { memo } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Selector } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\nconst options = [\n  {\n    label: '选项一',\n    value: '1',\n  },\n  {\n    label: '选项二',\n    value: '2',\n  },\n  {\n    label: '选项三',\n    value: '3',\n  },\n];\n\nconst SelectorExample = memo(() => {\n  return (\n    <ScrollView style={{ backgroundColor: 'white' }}>\n      <DemoBlock title=\"单选\" inset>\n        <Selector\n          options={options}\n          defaultValue={['1']}\n          onChange={(arr, extend) => console.log(arr, extend.items)}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"多选\" inset>\n        <Selector\n          options={options}\n          defaultValue={['2', '3']}\n          multiple\n          onChange={(arr, extend) => console.log(arr, extend.items)}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"禁用状态\" inset>\n        <Selector\n          disabled\n          defaultValue={['1']}\n          options={[\n            {\n              label: '选项一',\n              value: '1',\n            },\n            {\n              label: '选项二',\n              value: '2',\n              disabled: true,\n            },\n            {\n              label: '选项三',\n              value: '3',\n            },\n          ]}\n        />\n      </DemoBlock>\n      <DemoBlock title=\"描述选项\" inset>\n        <Selector\n          options={[\n            {\n              label: '选项一',\n              value: '1',\n              description: '描述信息',\n            },\n            {\n              label: '选项二',\n              value: '2',\n              description: '描述信息',\n            },\n          ]}\n        />\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default SelectorExample;\n","import React, { memo, useRef } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Form, Input, FormInstance, Button } from 'rn-vant';\nimport { DemoBlock } from '../../components';\n\ninterface FormValue {\n  username: string;\n  password: string;\n}\n\nconst FormExample = memo(() => {\n  const formRef = useRef<FormInstance<FormValue>>(null);\n\n  return (\n    <ScrollView>\n      <DemoBlock title=\"基础用法\">\n        <Form<FormValue> form={formRef}>\n          <Form.Item label=\"用户名\" name=\"username\" rules={{ required: '请填写用户名' }}>\n            <Input placeholder=\"请输入用户名\" />\n          </Form.Item>\n          <Form.Item label=\"密码\" name=\"password\" rules={{ required: '请填写密码' }}>\n            <Input placeholder=\"请输入密码\" type=\"password\" />\n          </Form.Item>\n        </Form>\n        <Button round type=\"primary\" style={{ marginHorizontal: 16, marginTop: 16 }}>\n          提交\n        </Button>\n      </DemoBlock>\n    </ScrollView>\n  );\n});\n\nexport default FormExample;\n","import { Platform } from 'react-native';\n\n/**\n * 监听 iframe 通信\n * @param _method 事件名\n * @param callback 回调\n */\nexport const listenerMessage = <T>(\n  _method: string,\n  callback: (data: T) => void\n): { cancel: () => void } => {\n  let cancel = () => {};\n  if (Platform.OS === 'web') {\n    const callbackEvent = (event: MessageEvent<any>) => {\n      const { method, data } = event?.data ?? {};\n      if (method === _method) {\n        callback(data);\n      }\n    };\n    window.addEventListener('message', callbackEvent);\n    cancel = () => window.removeEventListener('message', callbackEvent);\n  }\n  return { cancel };\n};\n\n/**\n * 发送 iframe 信息\n * @param method 事件名\n * @param data 信息\n */\nexport const postMessage = <T>(method: string, data?: T): void => {\n  if (Platform.OS === 'web') {\n    window.parent.postMessage({ method, data }, '*');\n  }\n};\n\nexport const listenerIframeLoaded = (): Promise<void> => {\n  return new Promise<void>(resolve => {\n    if (Platform.OS === 'web') {\n      // 发送事件给父页面，告知 iframe 已经准备好了\n      postMessage('ready');\n      const { cancel } = listenerMessage('ready', () => {\n        cancel();\n        resolve();\n      });\n      setTimeout(resolve, 2000);\n    } else {\n      resolve();\n    }\n  });\n};\n","export const common = {\n  // colors\n  black: '#000',\n  white: '#fff',\n  gray_1: '#f7f8fa',\n  gray_2: '#f2f3f5',\n  gray_3: '#ebedf0',\n  gray_4: '#dcdee0',\n  gray_5: '#c8c9cc',\n  gray_6: '#969799',\n  gray_7: '#646566',\n  gray_8: '#323233',\n  blue: '#1989fa',\n  green: '#07c160',\n\n  // sizes\n  padding: 24,\n  row_max_width: 1680,\n  nav_width: 220,\n  border_radius: 20,\n  simulator_width: 360,\n  simulator_height: 620,\n  header_top_height: 64,\n};\n\nexport const lightTheme = {\n  ...common,\n\n  // text\n  text_color_1: common.black,\n  text_color_2: common.gray_8,\n  text_color_3: '#34495e',\n  text_color_4: common.gray_6,\n  link_color: common.blue,\n\n  // background\n  background: '#eff2f5',\n  background_2: common.white,\n  background_3: common.white,\n  header_background: '#011f3c',\n  border_color: common.gray_2,\n\n  // code\n  code_color: '#58727e',\n  code_comment_color: common.gray_6,\n  code_background: common.gray_1,\n\n  // blockquote\n  blockquote_color: '#4994df',\n  blockquote_background: '#ecf9ff',\n};\n\nexport const darkTheme = {\n  ...common,\n\n  // text\n  text_color_1: common.white,\n  text_color_2: 'rgba(255, 255, 255, 0.9)',\n  text_color_3: 'rgba(255, 255, 255, 0.75)',\n  text_color_4: 'rgba(255, 255, 255, 0.6)',\n  link_color: '#1bb5fe',\n\n  // background\n  background: '#202124',\n  background_2: 'rgba(255, 255, 255, 0.06)',\n  background_3: 'rgba(255, 255, 255, 0.1)',\n  header_background: 'rgba(1, 31, 60, 0.3)',\n  border_color: '#3a3a3c',\n\n  // code\n  code_color: 'rgba(200, 200, 200, 0.85)',\n  code_comment_color: common.gray_7,\n  code_background: 'rgba(0, 0, 0, 0.24)',\n\n  // blockquote\n  blockquote_color: '#bae6fd',\n  blockquote_background: 'rgba(7, 89, 133, 0.25)',\n};\n","import { Theme, DefaultTheme, DarkTheme as NativeDarkTheme } from '@react-navigation/native';\nimport { lightTheme, darkTheme } from '../style/vars';\n\nexport const DarkTheme: Theme = {\n  dark: true,\n  colors: {\n    ...NativeDarkTheme.colors,\n    background: darkTheme.black,\n    card: darkTheme.background_3,\n    text: darkTheme.text_color_2,\n  },\n};\n\nexport const LightTheme: Theme = {\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    background: lightTheme.gray_1,\n    card: lightTheme.background_3,\n    text: lightTheme.text_color_2,\n  },\n};\n","import React, { useContext } from 'react';\nimport { View, ScrollView, Image, StyleSheet, Text } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Link } from '@react-navigation/native';\nimport { Icon } from 'rn-vant';\nimport { getRouteGroup, RouteItem } from '../navigation/routes';\nimport { postMessage } from '../utils';\nimport { GlobalContext } from '../GlobalContext';\nimport { DemoBlock } from '../components';\n\nconst routeGroup = getRouteGroup();\n\nconst Home = () => {\n  const { themeVars } = useContext(GlobalContext);\n\n  const onLinkPress = (item: RouteItem) => {\n    postMessage('navigate', item.href);\n  };\n\n  return (\n    <SafeAreaView style={styles.wrapper}>\n      <ScrollView style={{ paddingHorizontal: 20 }}>\n        <View style={styles.header}>\n          <Image source={{ uri: 'https://img01.yzcdn.cn/vant/logo.png' }} style={styles.logo} />\n          <Text style={[styles.title, { color: themeVars.text_color_2 }]}>RN Vant</Text>\n        </View>\n        {routeGroup.map(it => (\n          <DemoBlock title={it.name} key={it.name}>\n            {it.list.map((item, idx) => (\n              <Link\n                style={[styles.link, idx === it.list.length - 1 && styles.linkLast]}\n                key={item.href}\n                to={{ screen: item.href, params: {} }}\n                onPress={() => onLinkPress(item)}\n              >\n                <View style={[styles.item, { backgroundColor: themeVars.background_3 }]}>\n                  <Text style={[styles.text, { color: themeVars.text_color_3 }]}>{item.name}</Text>\n                  <Icon name=\"arrow\" size={16} color=\"#B6C3D2\" />\n                </View>\n              </Link>\n            ))}\n          </DemoBlock>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 16,\n  },\n  item: {\n    alignItems: 'center',\n    borderRadius: 99,\n    display: 'flex',\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-between',\n    paddingLeft: 20,\n    paddingRight: 16,\n    width: '100%',\n  },\n  link: {\n    height: 40,\n    marginBottom: 12,\n  },\n  linkLast: {\n    marginBottom: 0,\n  },\n  logo: {\n    height: 32,\n    width: 32,\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: '600',\n    lineHeight: 40,\n  },\n  title: {\n    fontSize: 32,\n    marginLeft: 16,\n  },\n  wrapper: {\n    paddingBottom: 20,\n    paddingTop: 46,\n  },\n});\n\nexport default Home;\n","import React, { FC, useEffect } from 'react';\nimport * as Linking from 'expo-linking';\nimport { ColorSchemeName, Text } from 'react-native';\nimport { NavigationContainer, useLinkTo } from '@react-navigation/native';\nimport { HeaderBackButton } from '@react-navigation/elements';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { routes } from './routes';\nimport { listenerMessage } from '../utils';\nimport { DarkTheme, LightTheme } from './navigationTheme';\n\nimport Home from '../pages/index';\n\nconst Stack = createStackNavigator();\nconst prefix = Linking.createURL('/');\n\nconst screens = routes.reduce<Record<string, string>>((result, it) => {\n  // eslint-disable-next-line no-param-reassign\n  result[it.href] = it.href;\n  return result;\n}, {});\n\nconst StackNavigator = () => {\n  const linkTo = useLinkTo();\n\n  useEffect(() => {\n    listenerMessage('navigate', (data: string) => {\n      /**\n       * 判断 iframe 接收到的 href 是否有效\n       */\n      if (data && routes.find(it => it.href === data)) {\n        linkTo(data);\n      }\n    });\n  }, []);\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"/\" component={Home} options={{ headerShown: false, title: '首页' }} />\n      {routes.map(it => (\n        <Stack.Screen\n          key={it.href}\n          name={it.href}\n          component={it.component}\n          options={({ navigation }) => ({\n            title: it.name,\n            // 自定义后退按钮\n            headerLeft: props => (\n              <HeaderBackButton {...props} onPress={() => navigation.navigate('/')} />\n            ),\n          })}\n        />\n      ))}\n    </Stack.Navigator>\n  );\n};\n\nconst Navigation: FC<{ colorScheme: ColorSchemeName }> = ({ colorScheme }) => (\n  <NavigationContainer\n    theme={colorScheme === 'dark' ? DarkTheme : LightTheme}\n    fallback={<Text>Loading...</Text>}\n    linking={{\n      prefixes: [prefix],\n      config: {\n        screens: {\n          '/': '/',\n          ...screens,\n        },\n      },\n    }}\n  >\n    <StackNavigator />\n  </NavigationContainer>\n);\n\nexport default Navigation;\n","import React, { FC, useState, useEffect, useMemo } from 'react';\nimport { useColorScheme, StatusBar, ColorSchemeName } from 'react-native';\nimport { ConfigProvider, defaultTheme, darkTheme } from 'rn-vant';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Navigation from './navigation';\nimport { listenerMessage, listenerIframeLoaded } from './utils';\nimport { lightTheme, darkTheme as darkThemeVars } from './style/vars';\nimport { GlobalContext, GlobalState } from './GlobalContext';\n\nconst Layout: FC = () => {\n  const [isReady, setReady] = useState(false);\n  const [themeMode, setThemeMode] = useState<ColorSchemeName>(useColorScheme());\n  const isDarkMode = themeMode === 'dark';\n\n  useEffect(() => {\n    const { cancel } = listenerMessage('theme', (theme: ColorSchemeName) => {\n      setThemeMode(theme);\n    });\n\n    listenerIframeLoaded().then(() => {\n      setReady(true);\n    });\n\n    return cancel;\n  }, []);\n\n  const globalState = useMemo<GlobalState>(\n    () => ({\n      themeMode,\n      isDarkMode,\n      themeVars: isDarkMode ? darkThemeVars : lightTheme,\n    }),\n    [themeMode, isDarkMode]\n  );\n\n  return (\n    <GlobalContext.Provider value={globalState}>\n      <SafeAreaProvider>\n        {isReady && (\n          <ConfigProvider theme={isDarkMode ? darkTheme : defaultTheme}>\n            <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n            <Navigation colorScheme={themeMode} />\n          </ConfigProvider>\n        )}\n      </SafeAreaProvider>\n    </GlobalContext.Provider>\n  );\n};\n\nexport default Layout;\n","// @generated by expo-yarn-workspaces\n\nimport 'expo/build/Expo.fx';\nimport { activateKeepAwake } from 'expo-keep-awake';\nimport registerRootComponent from 'expo/build/launch/registerRootComponent';\n\nimport App from '../App';\n\nif (__DEV__) {\n  activateKeepAwake();\n}\n\nregisterRootComponent(App);\n","import React from 'react';\nimport App from './src';\n\nexport default () => <App />;\n"],"sourceRoot":""}